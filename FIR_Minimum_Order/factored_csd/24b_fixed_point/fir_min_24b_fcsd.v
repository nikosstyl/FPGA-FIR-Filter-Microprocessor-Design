// -------------------------------------------------------------
//
// Module: fir_min_24b_fcsd
// Generated by MATLAB(R) 9.12 and Filter Design HDL Coder 3.1.11.
// Generated on: 2023-06-19 20:49:03
// -------------------------------------------------------------

// -------------------------------------------------------------
// HDL Code Generation Options:
//
// CoeffMultipliers: Factored-CSD
// FIRAdderStyle: tree
// OptimizeForHDL: on
// TargetDirectory: W:\Nikos\UTh\Σχεδίαση Επεξεργαστών\Project\FIR_Minimum_Order\factored_csd\24b_fixed_point
// AddPipelineRegisters: on
// Name: fir_min_24b_fcsd
// InputDataType: numerictype(1,24,0)
// TargetLanguage: Verilog
// TestBenchName: fir_min_24b_fcsd_tb
// TestBenchStimulus: impulse step ramp chirp noise 

// Filter Specifications:
//
// Sample Rate     : 46 kHz
// Response        : Lowpass
// Specification   : Fp,Fst,Ap,Ast
// Stopband Atten. : 60 dB
// Passband Edge   : 8 kHz
// Stopband Edge   : 9.6 kHz
// Passband Ripple : 1 dB
// -------------------------------------------------------------

// -------------------------------------------------------------
// HDL Implementation    : Fully parallel
// Folding Factor        : 1
// -------------------------------------------------------------
// Filter Settings:
//
// Discrete-Time FIR Filter (real)
// -------------------------------
// Filter Structure  : Direct-Form FIR
// Filter Length     : 61
// Stable            : Yes
// Linear Phase      : Yes (Type 1)
// Arithmetic        : fixed
// Numerator         : s24,24 -> [-5.000000e-01 5.000000e-01)
// -------------------------------------------------------------




`timescale 1 ns / 1 ns

module fir_min_24b_fcsd
               (
                clk,
                clk_enable,
                reset,
                filter_in,
                filter_out
                );

  input   clk; 
  input   clk_enable; 
  input   reset; 
  input   signed [23:0] filter_in; //sfix24
  output  signed [53:0] filter_out; //sfix54_En24

////////////////////////////////////////////////////////////////
//Module Architecture: fir_min_24b_fcsd
////////////////////////////////////////////////////////////////
  // Local Functions
  // Type Definitions
  // Constants
  parameter signed [23:0] coeff1 = 24'b000000000100011101101111; //sfix24_En24
  parameter signed [23:0] coeff2 = 24'b000000000000110010010011; //sfix24_En24
  parameter signed [23:0] coeff3 = 24'b111111110000100100110010; //sfix24_En24
  parameter signed [23:0] coeff4 = 24'b111111011000001001111001; //sfix24_En24
  parameter signed [23:0] coeff5 = 24'b111111001011111100010101; //sfix24_En24
  parameter signed [23:0] coeff6 = 24'b111111011101111011001110; //sfix24_En24
  parameter signed [23:0] coeff7 = 24'b000000000101101001001000; //sfix24_En24
  parameter signed [23:0] coeff8 = 24'b000000100000001101000010; //sfix24_En24
  parameter signed [23:0] coeff9 = 24'b000000010010001000110111; //sfix24_En24
  parameter signed [23:0] coeff10 = 24'b111111101010010000100100; //sfix24_En24
  parameter signed [23:0] coeff11 = 24'b111111011000010100110010; //sfix24_En24
  parameter signed [23:0] coeff12 = 24'b111111110111101100100001; //sfix24_En24
  parameter signed [23:0] coeff13 = 24'b000000101000011100000010; //sfix24_En24
  parameter signed [23:0] coeff14 = 24'b000000101101001101100111; //sfix24_En24
  parameter signed [23:0] coeff15 = 24'b111111110110001100110010; //sfix24_En24
  parameter signed [23:0] coeff16 = 24'b111111000000000110000111; //sfix24_En24
  parameter signed [23:0] coeff17 = 24'b111111010100000011011011; //sfix24_En24
  parameter signed [23:0] coeff18 = 24'b000000101000011011110111; //sfix24_En24
  parameter signed [23:0] coeff19 = 24'b000001011010010100000011; //sfix24_En24
  parameter signed [23:0] coeff20 = 24'b000000011101000101011110; //sfix24_En24
  parameter signed [23:0] coeff21 = 24'b111110100111010110101001; //sfix24_En24
  parameter signed [23:0] coeff22 = 24'b111110001011011100110011; //sfix24_En24
  parameter signed [23:0] coeff23 = 24'b000000001010110110000001; //sfix24_En24
  parameter signed [23:0] coeff24 = 24'b000010100101110110101001; //sfix24_En24
  parameter signed [23:0] coeff25 = 24'b000010001011000011101011; //sfix24_En24
  parameter signed [23:0] coeff26 = 24'b111110010101001100100110; //sfix24_En24
  parameter signed [23:0] coeff27 = 24'b111011000000100111010011; //sfix24_En24
  parameter signed [23:0] coeff28 = 24'b111101100101110001111111; //sfix24_En24
  parameter signed [23:0] coeff29 = 24'b000111010010011100001101; //sfix24_En24
  parameter signed [23:0] coeff30 = 24'b010010101110110000100001; //sfix24_En24
  parameter signed [23:0] coeff31 = 24'b010111110100111000101000; //sfix24_En24
  parameter signed [23:0] coeff32 = 24'b010010101110110000100001; //sfix24_En24
  parameter signed [23:0] coeff33 = 24'b000111010010011100001101; //sfix24_En24
  parameter signed [23:0] coeff34 = 24'b111101100101110001111111; //sfix24_En24
  parameter signed [23:0] coeff35 = 24'b111011000000100111010011; //sfix24_En24
  parameter signed [23:0] coeff36 = 24'b111110010101001100100110; //sfix24_En24
  parameter signed [23:0] coeff37 = 24'b000010001011000011101011; //sfix24_En24
  parameter signed [23:0] coeff38 = 24'b000010100101110110101001; //sfix24_En24
  parameter signed [23:0] coeff39 = 24'b000000001010110110000001; //sfix24_En24
  parameter signed [23:0] coeff40 = 24'b111110001011011100110011; //sfix24_En24
  parameter signed [23:0] coeff41 = 24'b111110100111010110101001; //sfix24_En24
  parameter signed [23:0] coeff42 = 24'b000000011101000101011110; //sfix24_En24
  parameter signed [23:0] coeff43 = 24'b000001011010010100000011; //sfix24_En24
  parameter signed [23:0] coeff44 = 24'b000000101000011011110111; //sfix24_En24
  parameter signed [23:0] coeff45 = 24'b111111010100000011011011; //sfix24_En24
  parameter signed [23:0] coeff46 = 24'b111111000000000110000111; //sfix24_En24
  parameter signed [23:0] coeff47 = 24'b111111110110001100110010; //sfix24_En24
  parameter signed [23:0] coeff48 = 24'b000000101101001101100111; //sfix24_En24
  parameter signed [23:0] coeff49 = 24'b000000101000011100000010; //sfix24_En24
  parameter signed [23:0] coeff50 = 24'b111111110111101100100001; //sfix24_En24
  parameter signed [23:0] coeff51 = 24'b111111011000010100110010; //sfix24_En24
  parameter signed [23:0] coeff52 = 24'b111111101010010000100100; //sfix24_En24
  parameter signed [23:0] coeff53 = 24'b000000010010001000110111; //sfix24_En24
  parameter signed [23:0] coeff54 = 24'b000000100000001101000010; //sfix24_En24
  parameter signed [23:0] coeff55 = 24'b000000000101101001001000; //sfix24_En24
  parameter signed [23:0] coeff56 = 24'b111111011101111011001110; //sfix24_En24
  parameter signed [23:0] coeff57 = 24'b111111001011111100010101; //sfix24_En24
  parameter signed [23:0] coeff58 = 24'b111111011000001001111001; //sfix24_En24
  parameter signed [23:0] coeff59 = 24'b111111110000100100110010; //sfix24_En24
  parameter signed [23:0] coeff60 = 24'b000000000000110010010011; //sfix24_En24
  parameter signed [23:0] coeff61 = 24'b000000000100011101101111; //sfix24_En24

  // Signals
  reg  signed [23:0] delay_pipeline [0:60] ; // sfix24
  wire signed [47:0] product61; // sfix48_En24
  wire signed [38:0] mulcsd_temp; // sfix39_En24
  wire signed [47:0] product60; // sfix48_En24
  wire signed [36:0] mulcsd_temp_1; // sfix37_En24
  wire signed [47:0] product59; // sfix48_En24
  wire signed [40:0] mulcsd_temp_2; // sfix41_En24
  wire signed [47:0] product58; // sfix48_En24
  wire signed [41:0] mulcsd_temp_3; // sfix42_En24
  wire signed [47:0] product57; // sfix48_En24
  wire signed [42:0] mulcsd_temp_4; // sfix43_En24
  wire signed [47:0] product56; // sfix48_En24
  wire signed [41:0] mulcsd_temp_5; // sfix42_En24
  wire signed [47:0] product55; // sfix48_En24
  wire signed [38:0] mulcsd_temp_6; // sfix39_En24
  wire signed [47:0] product54; // sfix48_En24
  wire signed [41:0] mulcsd_temp_7; // sfix42_En24
  wire signed [47:0] product53; // sfix48_En24
  wire signed [30:0] factoredcsd_temp; // sfix31_En7
  wire signed [31:0] mulcsd_temp_8; // sfix32_En7
  wire signed [37:0] factoredcsd_temp_1; // sfix38_En14
  wire signed [37:0] mulcsd_temp_9; // sfix38_En14
  wire signed [40:0] factoredcsd_temp_2; // sfix41_En18
  wire signed [41:0] mulcsd_temp_10; // sfix42_En18
  wire signed [40:0] factoredcsd_temp_3; // sfix41_En24
  wire signed [47:0] product52; // sfix48_En24
  wire signed [40:0] mulcsd_temp_11; // sfix41_En24
  wire signed [47:0] product51; // sfix48_En24
  wire signed [41:0] mulcsd_temp_12; // sfix42_En24
  wire signed [47:0] product50; // sfix48_En24
  wire signed [39:0] mulcsd_temp_13; // sfix40_En24
  wire signed [47:0] product49; // sfix48_En24
  wire signed [41:0] mulcsd_temp_14; // sfix42_En24
  wire signed [47:0] product48; // sfix48_En24
  wire signed [41:0] mulcsd_temp_15; // sfix42_En24
  wire signed [47:0] product47; // sfix48_En24
  wire signed [39:0] mulcsd_temp_16; // sfix40_En24
  wire signed [47:0] product46; // sfix48_En24
  wire signed [42:0] mulcsd_temp_17; // sfix43_En24
  wire signed [47:0] product45; // sfix48_En24
  wire signed [41:0] mulcsd_temp_18; // sfix42_En24
  wire signed [47:0] product44; // sfix48_En24
  wire signed [41:0] mulcsd_temp_19; // sfix42_En24
  wire signed [47:0] product43; // sfix48_En24
  wire signed [42:0] mulcsd_temp_20; // sfix43_En24
  wire signed [47:0] product42; // sfix48_En24
  wire signed [41:0] mulcsd_temp_21; // sfix42_En24
  wire signed [47:0] product41; // sfix48_En24
  wire signed [42:0] mulcsd_temp_22; // sfix43_En24
  wire signed [47:0] product40; // sfix48_En24
  wire signed [43:0] mulcsd_temp_23; // sfix44_En24
  wire signed [47:0] product39; // sfix48_En24
  wire signed [39:0] mulcsd_temp_24; // sfix40_En24
  wire signed [47:0] product38; // sfix48_En24
  wire signed [32:0] factoredcsd_temp_4; // sfix33_En9
  wire signed [33:0] mulcsd_temp_25; // sfix34_En9
  wire signed [39:0] factoredcsd_temp_5; // sfix40_En16
  wire signed [39:0] mulcsd_temp_26; // sfix40_En16
  wire signed [43:0] factoredcsd_temp_6; // sfix44_En21
  wire signed [44:0] mulcsd_temp_27; // sfix45_En21
  wire signed [43:0] factoredcsd_temp_7; // sfix44_En24
  wire signed [47:0] product37; // sfix48_En24
  wire signed [43:0] mulcsd_temp_28; // sfix44_En24
  wire signed [47:0] product36; // sfix48_En24
  wire signed [40:0] factoredcsd_temp_8; // sfix41_En17
  wire signed [40:0] mulcsd_temp_29; // sfix41_En17
  wire signed [42:0] factoredcsd_temp_9; // sfix43_En19
  wire signed [43:0] mulcsd_temp_30; // sfix44_En19
  wire signed [42:0] factoredcsd_temp_10; // sfix43_En24
  wire signed [43:0] unaryminus_temp; // sfix44_En24
  wire signed [47:0] product35; // sfix48_En24
  wire signed [41:0] factoredcsd_temp_11; // sfix42_En18
  wire signed [42:0] mulcsd_temp_31; // sfix43_En18
  wire signed [44:0] factoredcsd_temp_12; // sfix45_En21
  wire signed [44:0] mulcsd_temp_32; // sfix45_En21
  wire signed [44:0] factoredcsd_temp_13; // sfix45_En24
  wire signed [45:0] unaryminus_temp_1; // sfix46_En24
  wire signed [47:0] product34; // sfix48_En24
  wire signed [43:0] mulcsd_temp_33; // sfix44_En24
  wire signed [47:0] product33; // sfix48_En24
  wire signed [45:0] mulcsd_temp_34; // sfix46_En24
  wire signed [47:0] product32; // sfix48_En24
  wire signed [46:0] mulcsd_temp_35; // sfix47_En24
  wire signed [47:0] product31; // sfix48_En24
  wire signed [46:0] mulcsd_temp_36; // sfix47_En24
  wire signed [47:0] product30; // sfix48_En24
  wire signed [46:0] mulcsd_temp_37; // sfix47_En24
  wire signed [47:0] product29; // sfix48_En24
  wire signed [45:0] mulcsd_temp_38; // sfix46_En24
  wire signed [47:0] product28; // sfix48_En24
  wire signed [43:0] mulcsd_temp_39; // sfix44_En24
  wire signed [47:0] product27; // sfix48_En24
  wire signed [41:0] factoredcsd_temp_14; // sfix42_En18
  wire signed [42:0] mulcsd_temp_40; // sfix43_En18
  wire signed [44:0] factoredcsd_temp_15; // sfix45_En21
  wire signed [44:0] mulcsd_temp_41; // sfix45_En21
  wire signed [44:0] factoredcsd_temp_16; // sfix45_En24
  wire signed [45:0] unaryminus_temp_2; // sfix46_En24
  wire signed [47:0] product26; // sfix48_En24
  wire signed [40:0] factoredcsd_temp_17; // sfix41_En17
  wire signed [40:0] mulcsd_temp_42; // sfix41_En17
  wire signed [42:0] factoredcsd_temp_18; // sfix43_En19
  wire signed [43:0] mulcsd_temp_43; // sfix44_En19
  wire signed [42:0] factoredcsd_temp_19; // sfix43_En24
  wire signed [43:0] unaryminus_temp_3; // sfix44_En24
  wire signed [47:0] product25; // sfix48_En24
  wire signed [43:0] mulcsd_temp_44; // sfix44_En24
  wire signed [47:0] product24; // sfix48_En24
  wire signed [32:0] factoredcsd_temp_20; // sfix33_En9
  wire signed [33:0] mulcsd_temp_45; // sfix34_En9
  wire signed [39:0] factoredcsd_temp_21; // sfix40_En16
  wire signed [39:0] mulcsd_temp_46; // sfix40_En16
  wire signed [43:0] factoredcsd_temp_22; // sfix44_En21
  wire signed [44:0] mulcsd_temp_47; // sfix45_En21
  wire signed [43:0] factoredcsd_temp_23; // sfix44_En24
  wire signed [47:0] product23; // sfix48_En24
  wire signed [39:0] mulcsd_temp_48; // sfix40_En24
  wire signed [47:0] product22; // sfix48_En24
  wire signed [43:0] mulcsd_temp_49; // sfix44_En24
  wire signed [47:0] product21; // sfix48_En24
  wire signed [42:0] mulcsd_temp_50; // sfix43_En24
  wire signed [47:0] product20; // sfix48_En24
  wire signed [41:0] mulcsd_temp_51; // sfix42_En24
  wire signed [47:0] product19; // sfix48_En24
  wire signed [42:0] mulcsd_temp_52; // sfix43_En24
  wire signed [47:0] product18; // sfix48_En24
  wire signed [41:0] mulcsd_temp_53; // sfix42_En24
  wire signed [47:0] product17; // sfix48_En24
  wire signed [41:0] mulcsd_temp_54; // sfix42_En24
  wire signed [47:0] product16; // sfix48_En24
  wire signed [42:0] mulcsd_temp_55; // sfix43_En24
  wire signed [47:0] product15; // sfix48_En24
  wire signed [39:0] mulcsd_temp_56; // sfix40_En24
  wire signed [47:0] product14; // sfix48_En24
  wire signed [41:0] mulcsd_temp_57; // sfix42_En24
  wire signed [47:0] product13; // sfix48_En24
  wire signed [41:0] mulcsd_temp_58; // sfix42_En24
  wire signed [47:0] product12; // sfix48_En24
  wire signed [39:0] mulcsd_temp_59; // sfix40_En24
  wire signed [47:0] product11; // sfix48_En24
  wire signed [41:0] mulcsd_temp_60; // sfix42_En24
  wire signed [47:0] product10; // sfix48_En24
  wire signed [40:0] mulcsd_temp_61; // sfix41_En24
  wire signed [47:0] product9; // sfix48_En24
  wire signed [30:0] factoredcsd_temp_24; // sfix31_En7
  wire signed [31:0] mulcsd_temp_62; // sfix32_En7
  wire signed [37:0] factoredcsd_temp_25; // sfix38_En14
  wire signed [37:0] mulcsd_temp_63; // sfix38_En14
  wire signed [40:0] factoredcsd_temp_26; // sfix41_En18
  wire signed [41:0] mulcsd_temp_64; // sfix42_En18
  wire signed [40:0] factoredcsd_temp_27; // sfix41_En24
  wire signed [47:0] product8; // sfix48_En24
  wire signed [41:0] mulcsd_temp_65; // sfix42_En24
  wire signed [47:0] product7; // sfix48_En24
  wire signed [38:0] mulcsd_temp_66; // sfix39_En24
  wire signed [47:0] product6; // sfix48_En24
  wire signed [41:0] mulcsd_temp_67; // sfix42_En24
  wire signed [47:0] product5; // sfix48_En24
  wire signed [42:0] mulcsd_temp_68; // sfix43_En24
  wire signed [47:0] product4; // sfix48_En24
  wire signed [41:0] mulcsd_temp_69; // sfix42_En24
  wire signed [47:0] product3; // sfix48_En24
  wire signed [40:0] mulcsd_temp_70; // sfix41_En24
  wire signed [47:0] product2; // sfix48_En24
  wire signed [36:0] mulcsd_temp_71; // sfix37_En24
  wire signed [47:0] product1; // sfix48_En24
  wire signed [38:0] mulcsd_temp_72; // sfix39_En24
  wire signed [53:0] sum_final; // sfix54_En24
  wire signed [53:0] sum1_1; // sfix54_En24
  wire signed [47:0] add_signext; // sfix48_En24
  wire signed [47:0] add_signext_1; // sfix48_En24
  wire signed [48:0] add_temp; // sfix49_En24
  reg  signed [53:0] sumpipe1_1; // sfix54_En24
  wire signed [53:0] sum1_2; // sfix54_En24
  wire signed [47:0] add_signext_2; // sfix48_En24
  wire signed [47:0] add_signext_3; // sfix48_En24
  wire signed [48:0] add_temp_1; // sfix49_En24
  reg  signed [53:0] sumpipe1_2; // sfix54_En24
  wire signed [53:0] sum1_3; // sfix54_En24
  wire signed [47:0] add_signext_4; // sfix48_En24
  wire signed [47:0] add_signext_5; // sfix48_En24
  wire signed [48:0] add_temp_2; // sfix49_En24
  reg  signed [53:0] sumpipe1_3; // sfix54_En24
  wire signed [53:0] sum1_4; // sfix54_En24
  wire signed [47:0] add_signext_6; // sfix48_En24
  wire signed [47:0] add_signext_7; // sfix48_En24
  wire signed [48:0] add_temp_3; // sfix49_En24
  reg  signed [53:0] sumpipe1_4; // sfix54_En24
  wire signed [53:0] sum1_5; // sfix54_En24
  wire signed [47:0] add_signext_8; // sfix48_En24
  wire signed [47:0] add_signext_9; // sfix48_En24
  wire signed [48:0] add_temp_4; // sfix49_En24
  reg  signed [53:0] sumpipe1_5; // sfix54_En24
  wire signed [53:0] sum1_6; // sfix54_En24
  wire signed [47:0] add_signext_10; // sfix48_En24
  wire signed [47:0] add_signext_11; // sfix48_En24
  wire signed [48:0] add_temp_5; // sfix49_En24
  reg  signed [53:0] sumpipe1_6; // sfix54_En24
  wire signed [53:0] sum1_7; // sfix54_En24
  wire signed [47:0] add_signext_12; // sfix48_En24
  wire signed [47:0] add_signext_13; // sfix48_En24
  wire signed [48:0] add_temp_6; // sfix49_En24
  reg  signed [53:0] sumpipe1_7; // sfix54_En24
  wire signed [53:0] sum1_8; // sfix54_En24
  wire signed [47:0] add_signext_14; // sfix48_En24
  wire signed [47:0] add_signext_15; // sfix48_En24
  wire signed [48:0] add_temp_7; // sfix49_En24
  reg  signed [53:0] sumpipe1_8; // sfix54_En24
  wire signed [53:0] sum1_9; // sfix54_En24
  wire signed [47:0] add_signext_16; // sfix48_En24
  wire signed [47:0] add_signext_17; // sfix48_En24
  wire signed [48:0] add_temp_8; // sfix49_En24
  reg  signed [53:0] sumpipe1_9; // sfix54_En24
  wire signed [53:0] sum1_10; // sfix54_En24
  wire signed [47:0] add_signext_18; // sfix48_En24
  wire signed [47:0] add_signext_19; // sfix48_En24
  wire signed [48:0] add_temp_9; // sfix49_En24
  reg  signed [53:0] sumpipe1_10; // sfix54_En24
  wire signed [53:0] sum1_11; // sfix54_En24
  wire signed [47:0] add_signext_20; // sfix48_En24
  wire signed [47:0] add_signext_21; // sfix48_En24
  wire signed [48:0] add_temp_10; // sfix49_En24
  reg  signed [53:0] sumpipe1_11; // sfix54_En24
  wire signed [53:0] sum1_12; // sfix54_En24
  wire signed [47:0] add_signext_22; // sfix48_En24
  wire signed [47:0] add_signext_23; // sfix48_En24
  wire signed [48:0] add_temp_11; // sfix49_En24
  reg  signed [53:0] sumpipe1_12; // sfix54_En24
  wire signed [53:0] sum1_13; // sfix54_En24
  wire signed [47:0] add_signext_24; // sfix48_En24
  wire signed [47:0] add_signext_25; // sfix48_En24
  wire signed [48:0] add_temp_12; // sfix49_En24
  reg  signed [53:0] sumpipe1_13; // sfix54_En24
  wire signed [53:0] sum1_14; // sfix54_En24
  wire signed [47:0] add_signext_26; // sfix48_En24
  wire signed [47:0] add_signext_27; // sfix48_En24
  wire signed [48:0] add_temp_13; // sfix49_En24
  reg  signed [53:0] sumpipe1_14; // sfix54_En24
  wire signed [53:0] sum1_15; // sfix54_En24
  wire signed [47:0] add_signext_28; // sfix48_En24
  wire signed [47:0] add_signext_29; // sfix48_En24
  wire signed [48:0] add_temp_14; // sfix49_En24
  reg  signed [53:0] sumpipe1_15; // sfix54_En24
  wire signed [53:0] sum1_16; // sfix54_En24
  wire signed [47:0] add_signext_30; // sfix48_En24
  wire signed [47:0] add_signext_31; // sfix48_En24
  wire signed [48:0] add_temp_15; // sfix49_En24
  reg  signed [53:0] sumpipe1_16; // sfix54_En24
  wire signed [53:0] sum1_17; // sfix54_En24
  wire signed [47:0] add_signext_32; // sfix48_En24
  wire signed [47:0] add_signext_33; // sfix48_En24
  wire signed [48:0] add_temp_16; // sfix49_En24
  reg  signed [53:0] sumpipe1_17; // sfix54_En24
  wire signed [53:0] sum1_18; // sfix54_En24
  wire signed [47:0] add_signext_34; // sfix48_En24
  wire signed [47:0] add_signext_35; // sfix48_En24
  wire signed [48:0] add_temp_17; // sfix49_En24
  reg  signed [53:0] sumpipe1_18; // sfix54_En24
  wire signed [53:0] sum1_19; // sfix54_En24
  wire signed [47:0] add_signext_36; // sfix48_En24
  wire signed [47:0] add_signext_37; // sfix48_En24
  wire signed [48:0] add_temp_18; // sfix49_En24
  reg  signed [53:0] sumpipe1_19; // sfix54_En24
  wire signed [53:0] sum1_20; // sfix54_En24
  wire signed [47:0] add_signext_38; // sfix48_En24
  wire signed [47:0] add_signext_39; // sfix48_En24
  wire signed [48:0] add_temp_19; // sfix49_En24
  reg  signed [53:0] sumpipe1_20; // sfix54_En24
  wire signed [53:0] sum1_21; // sfix54_En24
  wire signed [47:0] add_signext_40; // sfix48_En24
  wire signed [47:0] add_signext_41; // sfix48_En24
  wire signed [48:0] add_temp_20; // sfix49_En24
  reg  signed [53:0] sumpipe1_21; // sfix54_En24
  wire signed [53:0] sum1_22; // sfix54_En24
  wire signed [47:0] add_signext_42; // sfix48_En24
  wire signed [47:0] add_signext_43; // sfix48_En24
  wire signed [48:0] add_temp_21; // sfix49_En24
  reg  signed [53:0] sumpipe1_22; // sfix54_En24
  wire signed [53:0] sum1_23; // sfix54_En24
  wire signed [47:0] add_signext_44; // sfix48_En24
  wire signed [47:0] add_signext_45; // sfix48_En24
  wire signed [48:0] add_temp_22; // sfix49_En24
  reg  signed [53:0] sumpipe1_23; // sfix54_En24
  wire signed [53:0] sum1_24; // sfix54_En24
  wire signed [47:0] add_signext_46; // sfix48_En24
  wire signed [47:0] add_signext_47; // sfix48_En24
  wire signed [48:0] add_temp_23; // sfix49_En24
  reg  signed [53:0] sumpipe1_24; // sfix54_En24
  wire signed [53:0] sum1_25; // sfix54_En24
  wire signed [47:0] add_signext_48; // sfix48_En24
  wire signed [47:0] add_signext_49; // sfix48_En24
  wire signed [48:0] add_temp_24; // sfix49_En24
  reg  signed [53:0] sumpipe1_25; // sfix54_En24
  wire signed [53:0] sum1_26; // sfix54_En24
  wire signed [47:0] add_signext_50; // sfix48_En24
  wire signed [47:0] add_signext_51; // sfix48_En24
  wire signed [48:0] add_temp_25; // sfix49_En24
  reg  signed [53:0] sumpipe1_26; // sfix54_En24
  wire signed [53:0] sum1_27; // sfix54_En24
  wire signed [47:0] add_signext_52; // sfix48_En24
  wire signed [47:0] add_signext_53; // sfix48_En24
  wire signed [48:0] add_temp_26; // sfix49_En24
  reg  signed [53:0] sumpipe1_27; // sfix54_En24
  wire signed [53:0] sum1_28; // sfix54_En24
  wire signed [47:0] add_signext_54; // sfix48_En24
  wire signed [47:0] add_signext_55; // sfix48_En24
  wire signed [48:0] add_temp_27; // sfix49_En24
  reg  signed [53:0] sumpipe1_28; // sfix54_En24
  wire signed [53:0] sum1_29; // sfix54_En24
  wire signed [47:0] add_signext_56; // sfix48_En24
  wire signed [47:0] add_signext_57; // sfix48_En24
  wire signed [48:0] add_temp_28; // sfix49_En24
  reg  signed [53:0] sumpipe1_29; // sfix54_En24
  wire signed [53:0] sum1_30; // sfix54_En24
  wire signed [47:0] add_signext_58; // sfix48_En24
  wire signed [47:0] add_signext_59; // sfix48_En24
  wire signed [48:0] add_temp_29; // sfix49_En24
  reg  signed [53:0] sumpipe1_30; // sfix54_En24
  reg  signed [47:0] sumpipe1_31; // sfix48_En24
  wire signed [53:0] sum2_1; // sfix54_En24
  wire signed [53:0] add_signext_60; // sfix54_En24
  wire signed [53:0] add_signext_61; // sfix54_En24
  wire signed [54:0] add_temp_30; // sfix55_En24
  reg  signed [53:0] sumpipe2_1; // sfix54_En24
  wire signed [53:0] sum2_2; // sfix54_En24
  wire signed [53:0] add_signext_62; // sfix54_En24
  wire signed [53:0] add_signext_63; // sfix54_En24
  wire signed [54:0] add_temp_31; // sfix55_En24
  reg  signed [53:0] sumpipe2_2; // sfix54_En24
  wire signed [53:0] sum2_3; // sfix54_En24
  wire signed [53:0] add_signext_64; // sfix54_En24
  wire signed [53:0] add_signext_65; // sfix54_En24
  wire signed [54:0] add_temp_32; // sfix55_En24
  reg  signed [53:0] sumpipe2_3; // sfix54_En24
  wire signed [53:0] sum2_4; // sfix54_En24
  wire signed [53:0] add_signext_66; // sfix54_En24
  wire signed [53:0] add_signext_67; // sfix54_En24
  wire signed [54:0] add_temp_33; // sfix55_En24
  reg  signed [53:0] sumpipe2_4; // sfix54_En24
  wire signed [53:0] sum2_5; // sfix54_En24
  wire signed [53:0] add_signext_68; // sfix54_En24
  wire signed [53:0] add_signext_69; // sfix54_En24
  wire signed [54:0] add_temp_34; // sfix55_En24
  reg  signed [53:0] sumpipe2_5; // sfix54_En24
  wire signed [53:0] sum2_6; // sfix54_En24
  wire signed [53:0] add_signext_70; // sfix54_En24
  wire signed [53:0] add_signext_71; // sfix54_En24
  wire signed [54:0] add_temp_35; // sfix55_En24
  reg  signed [53:0] sumpipe2_6; // sfix54_En24
  wire signed [53:0] sum2_7; // sfix54_En24
  wire signed [53:0] add_signext_72; // sfix54_En24
  wire signed [53:0] add_signext_73; // sfix54_En24
  wire signed [54:0] add_temp_36; // sfix55_En24
  reg  signed [53:0] sumpipe2_7; // sfix54_En24
  wire signed [53:0] sum2_8; // sfix54_En24
  wire signed [53:0] add_signext_74; // sfix54_En24
  wire signed [53:0] add_signext_75; // sfix54_En24
  wire signed [54:0] add_temp_37; // sfix55_En24
  reg  signed [53:0] sumpipe2_8; // sfix54_En24
  wire signed [53:0] sum2_9; // sfix54_En24
  wire signed [53:0] add_signext_76; // sfix54_En24
  wire signed [53:0] add_signext_77; // sfix54_En24
  wire signed [54:0] add_temp_38; // sfix55_En24
  reg  signed [53:0] sumpipe2_9; // sfix54_En24
  wire signed [53:0] sum2_10; // sfix54_En24
  wire signed [53:0] add_signext_78; // sfix54_En24
  wire signed [53:0] add_signext_79; // sfix54_En24
  wire signed [54:0] add_temp_39; // sfix55_En24
  reg  signed [53:0] sumpipe2_10; // sfix54_En24
  wire signed [53:0] sum2_11; // sfix54_En24
  wire signed [53:0] add_signext_80; // sfix54_En24
  wire signed [53:0] add_signext_81; // sfix54_En24
  wire signed [54:0] add_temp_40; // sfix55_En24
  reg  signed [53:0] sumpipe2_11; // sfix54_En24
  wire signed [53:0] sum2_12; // sfix54_En24
  wire signed [53:0] add_signext_82; // sfix54_En24
  wire signed [53:0] add_signext_83; // sfix54_En24
  wire signed [54:0] add_temp_41; // sfix55_En24
  reg  signed [53:0] sumpipe2_12; // sfix54_En24
  wire signed [53:0] sum2_13; // sfix54_En24
  wire signed [53:0] add_signext_84; // sfix54_En24
  wire signed [53:0] add_signext_85; // sfix54_En24
  wire signed [54:0] add_temp_42; // sfix55_En24
  reg  signed [53:0] sumpipe2_13; // sfix54_En24
  wire signed [53:0] sum2_14; // sfix54_En24
  wire signed [53:0] add_signext_86; // sfix54_En24
  wire signed [53:0] add_signext_87; // sfix54_En24
  wire signed [54:0] add_temp_43; // sfix55_En24
  reg  signed [53:0] sumpipe2_14; // sfix54_En24
  wire signed [53:0] sum2_15; // sfix54_En24
  wire signed [53:0] add_signext_88; // sfix54_En24
  wire signed [53:0] add_signext_89; // sfix54_En24
  wire signed [54:0] add_temp_44; // sfix55_En24
  reg  signed [53:0] sumpipe2_15; // sfix54_En24
  reg  signed [47:0] sumpipe2_16; // sfix48_En24
  wire signed [53:0] sum3_1; // sfix54_En24
  wire signed [53:0] add_signext_90; // sfix54_En24
  wire signed [53:0] add_signext_91; // sfix54_En24
  wire signed [54:0] add_temp_45; // sfix55_En24
  reg  signed [53:0] sumpipe3_1; // sfix54_En24
  wire signed [53:0] sum3_2; // sfix54_En24
  wire signed [53:0] add_signext_92; // sfix54_En24
  wire signed [53:0] add_signext_93; // sfix54_En24
  wire signed [54:0] add_temp_46; // sfix55_En24
  reg  signed [53:0] sumpipe3_2; // sfix54_En24
  wire signed [53:0] sum3_3; // sfix54_En24
  wire signed [53:0] add_signext_94; // sfix54_En24
  wire signed [53:0] add_signext_95; // sfix54_En24
  wire signed [54:0] add_temp_47; // sfix55_En24
  reg  signed [53:0] sumpipe3_3; // sfix54_En24
  wire signed [53:0] sum3_4; // sfix54_En24
  wire signed [53:0] add_signext_96; // sfix54_En24
  wire signed [53:0] add_signext_97; // sfix54_En24
  wire signed [54:0] add_temp_48; // sfix55_En24
  reg  signed [53:0] sumpipe3_4; // sfix54_En24
  wire signed [53:0] sum3_5; // sfix54_En24
  wire signed [53:0] add_signext_98; // sfix54_En24
  wire signed [53:0] add_signext_99; // sfix54_En24
  wire signed [54:0] add_temp_49; // sfix55_En24
  reg  signed [53:0] sumpipe3_5; // sfix54_En24
  wire signed [53:0] sum3_6; // sfix54_En24
  wire signed [53:0] add_signext_100; // sfix54_En24
  wire signed [53:0] add_signext_101; // sfix54_En24
  wire signed [54:0] add_temp_50; // sfix55_En24
  reg  signed [53:0] sumpipe3_6; // sfix54_En24
  wire signed [53:0] sum3_7; // sfix54_En24
  wire signed [53:0] add_signext_102; // sfix54_En24
  wire signed [53:0] add_signext_103; // sfix54_En24
  wire signed [54:0] add_temp_51; // sfix55_En24
  reg  signed [53:0] sumpipe3_7; // sfix54_En24
  wire signed [53:0] sum3_8; // sfix54_En24
  wire signed [53:0] add_signext_104; // sfix54_En24
  wire signed [53:0] add_signext_105; // sfix54_En24
  wire signed [54:0] add_temp_52; // sfix55_En24
  reg  signed [53:0] sumpipe3_8; // sfix54_En24
  wire signed [53:0] sum4_1; // sfix54_En24
  wire signed [53:0] add_signext_106; // sfix54_En24
  wire signed [53:0] add_signext_107; // sfix54_En24
  wire signed [54:0] add_temp_53; // sfix55_En24
  reg  signed [53:0] sumpipe4_1; // sfix54_En24
  wire signed [53:0] sum4_2; // sfix54_En24
  wire signed [53:0] add_signext_108; // sfix54_En24
  wire signed [53:0] add_signext_109; // sfix54_En24
  wire signed [54:0] add_temp_54; // sfix55_En24
  reg  signed [53:0] sumpipe4_2; // sfix54_En24
  wire signed [53:0] sum4_3; // sfix54_En24
  wire signed [53:0] add_signext_110; // sfix54_En24
  wire signed [53:0] add_signext_111; // sfix54_En24
  wire signed [54:0] add_temp_55; // sfix55_En24
  reg  signed [53:0] sumpipe4_3; // sfix54_En24
  wire signed [53:0] sum4_4; // sfix54_En24
  wire signed [53:0] add_signext_112; // sfix54_En24
  wire signed [53:0] add_signext_113; // sfix54_En24
  wire signed [54:0] add_temp_56; // sfix55_En24
  reg  signed [53:0] sumpipe4_4; // sfix54_En24
  wire signed [53:0] sum5_1; // sfix54_En24
  wire signed [53:0] add_signext_114; // sfix54_En24
  wire signed [53:0] add_signext_115; // sfix54_En24
  wire signed [54:0] add_temp_57; // sfix55_En24
  reg  signed [53:0] sumpipe5_1; // sfix54_En24
  wire signed [53:0] sum5_2; // sfix54_En24
  wire signed [53:0] add_signext_116; // sfix54_En24
  wire signed [53:0] add_signext_117; // sfix54_En24
  wire signed [54:0] add_temp_58; // sfix55_En24
  reg  signed [53:0] sumpipe5_2; // sfix54_En24
  wire signed [53:0] sum6_1; // sfix54_En24
  wire signed [53:0] add_signext_118; // sfix54_En24
  wire signed [53:0] add_signext_119; // sfix54_En24
  wire signed [54:0] add_temp_59; // sfix55_En24
  reg  signed [53:0] sumpipe6_1; // sfix54_En24
  reg  signed [53:0] output_register; // sfix54_En24

  // Block Statements
  always @( posedge clk or posedge reset)
    begin: Delay_Pipeline_process
      if (reset == 1'b1) begin
        delay_pipeline[0] <= 0;
        delay_pipeline[1] <= 0;
        delay_pipeline[2] <= 0;
        delay_pipeline[3] <= 0;
        delay_pipeline[4] <= 0;
        delay_pipeline[5] <= 0;
        delay_pipeline[6] <= 0;
        delay_pipeline[7] <= 0;
        delay_pipeline[8] <= 0;
        delay_pipeline[9] <= 0;
        delay_pipeline[10] <= 0;
        delay_pipeline[11] <= 0;
        delay_pipeline[12] <= 0;
        delay_pipeline[13] <= 0;
        delay_pipeline[14] <= 0;
        delay_pipeline[15] <= 0;
        delay_pipeline[16] <= 0;
        delay_pipeline[17] <= 0;
        delay_pipeline[18] <= 0;
        delay_pipeline[19] <= 0;
        delay_pipeline[20] <= 0;
        delay_pipeline[21] <= 0;
        delay_pipeline[22] <= 0;
        delay_pipeline[23] <= 0;
        delay_pipeline[24] <= 0;
        delay_pipeline[25] <= 0;
        delay_pipeline[26] <= 0;
        delay_pipeline[27] <= 0;
        delay_pipeline[28] <= 0;
        delay_pipeline[29] <= 0;
        delay_pipeline[30] <= 0;
        delay_pipeline[31] <= 0;
        delay_pipeline[32] <= 0;
        delay_pipeline[33] <= 0;
        delay_pipeline[34] <= 0;
        delay_pipeline[35] <= 0;
        delay_pipeline[36] <= 0;
        delay_pipeline[37] <= 0;
        delay_pipeline[38] <= 0;
        delay_pipeline[39] <= 0;
        delay_pipeline[40] <= 0;
        delay_pipeline[41] <= 0;
        delay_pipeline[42] <= 0;
        delay_pipeline[43] <= 0;
        delay_pipeline[44] <= 0;
        delay_pipeline[45] <= 0;
        delay_pipeline[46] <= 0;
        delay_pipeline[47] <= 0;
        delay_pipeline[48] <= 0;
        delay_pipeline[49] <= 0;
        delay_pipeline[50] <= 0;
        delay_pipeline[51] <= 0;
        delay_pipeline[52] <= 0;
        delay_pipeline[53] <= 0;
        delay_pipeline[54] <= 0;
        delay_pipeline[55] <= 0;
        delay_pipeline[56] <= 0;
        delay_pipeline[57] <= 0;
        delay_pipeline[58] <= 0;
        delay_pipeline[59] <= 0;
        delay_pipeline[60] <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          delay_pipeline[0] <= filter_in;
          delay_pipeline[1] <= delay_pipeline[0];
          delay_pipeline[2] <= delay_pipeline[1];
          delay_pipeline[3] <= delay_pipeline[2];
          delay_pipeline[4] <= delay_pipeline[3];
          delay_pipeline[5] <= delay_pipeline[4];
          delay_pipeline[6] <= delay_pipeline[5];
          delay_pipeline[7] <= delay_pipeline[6];
          delay_pipeline[8] <= delay_pipeline[7];
          delay_pipeline[9] <= delay_pipeline[8];
          delay_pipeline[10] <= delay_pipeline[9];
          delay_pipeline[11] <= delay_pipeline[10];
          delay_pipeline[12] <= delay_pipeline[11];
          delay_pipeline[13] <= delay_pipeline[12];
          delay_pipeline[14] <= delay_pipeline[13];
          delay_pipeline[15] <= delay_pipeline[14];
          delay_pipeline[16] <= delay_pipeline[15];
          delay_pipeline[17] <= delay_pipeline[16];
          delay_pipeline[18] <= delay_pipeline[17];
          delay_pipeline[19] <= delay_pipeline[18];
          delay_pipeline[20] <= delay_pipeline[19];
          delay_pipeline[21] <= delay_pipeline[20];
          delay_pipeline[22] <= delay_pipeline[21];
          delay_pipeline[23] <= delay_pipeline[22];
          delay_pipeline[24] <= delay_pipeline[23];
          delay_pipeline[25] <= delay_pipeline[24];
          delay_pipeline[26] <= delay_pipeline[25];
          delay_pipeline[27] <= delay_pipeline[26];
          delay_pipeline[28] <= delay_pipeline[27];
          delay_pipeline[29] <= delay_pipeline[28];
          delay_pipeline[30] <= delay_pipeline[29];
          delay_pipeline[31] <= delay_pipeline[30];
          delay_pipeline[32] <= delay_pipeline[31];
          delay_pipeline[33] <= delay_pipeline[32];
          delay_pipeline[34] <= delay_pipeline[33];
          delay_pipeline[35] <= delay_pipeline[34];
          delay_pipeline[36] <= delay_pipeline[35];
          delay_pipeline[37] <= delay_pipeline[36];
          delay_pipeline[38] <= delay_pipeline[37];
          delay_pipeline[39] <= delay_pipeline[38];
          delay_pipeline[40] <= delay_pipeline[39];
          delay_pipeline[41] <= delay_pipeline[40];
          delay_pipeline[42] <= delay_pipeline[41];
          delay_pipeline[43] <= delay_pipeline[42];
          delay_pipeline[44] <= delay_pipeline[43];
          delay_pipeline[45] <= delay_pipeline[44];
          delay_pipeline[46] <= delay_pipeline[45];
          delay_pipeline[47] <= delay_pipeline[46];
          delay_pipeline[48] <= delay_pipeline[47];
          delay_pipeline[49] <= delay_pipeline[48];
          delay_pipeline[50] <= delay_pipeline[49];
          delay_pipeline[51] <= delay_pipeline[50];
          delay_pipeline[52] <= delay_pipeline[51];
          delay_pipeline[53] <= delay_pipeline[52];
          delay_pipeline[54] <= delay_pipeline[53];
          delay_pipeline[55] <= delay_pipeline[54];
          delay_pipeline[56] <= delay_pipeline[55];
          delay_pipeline[57] <= delay_pipeline[56];
          delay_pipeline[58] <= delay_pipeline[57];
          delay_pipeline[59] <= delay_pipeline[58];
          delay_pipeline[60] <= delay_pipeline[59];
        end
      end
    end // Delay_Pipeline_process


// For FCSD of 18287, optimizing to CSD due to lower cost
  assign mulcsd_temp = 
        $signed({delay_pipeline[60], 14'b00000000000000}) +
        $signed({delay_pipeline[60], 11'b00000000000}) -
        $signed({delay_pipeline[60], 8'b00000000}) +
        $signed({delay_pipeline[60], 7'b0000000}) -
        $signed({delay_pipeline[60], 5'b00000}) +
        $signed({delay_pipeline[60], 4'b0000}) -
        delay_pipeline[60];
  assign product61 = $signed({{9{mulcsd_temp[38]}}, mulcsd_temp});

// For FCSD of 3219, optimizing to CSD due to lower cost
  assign mulcsd_temp_1 = 
        $signed({delay_pipeline[59], 12'b000000000000}) -
        $signed({delay_pipeline[59], 10'b0000000000}) +
        $signed({delay_pipeline[59], 7'b0000000}) +
        $signed({delay_pipeline[59], 4'b0000}) +
        $signed({delay_pipeline[59], 2'b00}) -
        delay_pipeline[59];
  assign product60 = $signed({{11{mulcsd_temp_1[36]}}, mulcsd_temp_1});

// For FCSD of -63182, optimizing to CSD due to lower cost
  assign mulcsd_temp_2 = - (
        $signed({delay_pipeline[58], 16'b0000000000000000}) -
        $signed({delay_pipeline[58], 12'b000000000000}) +
        $signed({delay_pipeline[58], 11'b00000000000}) -
        $signed({delay_pipeline[58], 9'b000000000}) +
        $signed({delay_pipeline[58], 8'b00000000}) -
        $signed({delay_pipeline[58], 6'b000000}) +
        $signed({delay_pipeline[58], 4'b0000}) -
        $signed({delay_pipeline[58], 1'b0}));
  assign product59 = $signed({{7{mulcsd_temp_2[40]}}, mulcsd_temp_2});

// For FCSD of -163207, optimizing to CSD due to lower cost
  assign mulcsd_temp_3 = - (
        $signed({delay_pipeline[57], 17'b00000000000000000}) +
        $signed({delay_pipeline[57], 15'b000000000000000}) -
        $signed({delay_pipeline[57], 10'b0000000000}) +
        $signed({delay_pipeline[57], 9'b000000000}) -
        $signed({delay_pipeline[57], 7'b0000000}) +
        $signed({delay_pipeline[57], 3'b000}) -
        delay_pipeline[57]);
  assign product58 = $signed({{6{mulcsd_temp_3[41]}}, mulcsd_temp_3});

// For FCSD of -213227, optimizing to CSD due to lower cost
  assign mulcsd_temp_4 = - (
        $signed({delay_pipeline[56], 18'b000000000000000000}) -
        $signed({delay_pipeline[56], 16'b0000000000000000}) +
        $signed({delay_pipeline[56], 14'b00000000000000}) +
        $signed({delay_pipeline[56], 8'b00000000}) -
        $signed({delay_pipeline[56], 5'b00000}) +
        $signed({delay_pipeline[56], 3'b000}) +
        $signed({delay_pipeline[56], 2'b00}) -
        delay_pipeline[56]);
  assign product57 = $signed({{5{mulcsd_temp_4[42]}}, mulcsd_temp_4});

// For FCSD of -139570, optimizing to CSD due to lower cost
  assign mulcsd_temp_5 = - (
        $signed({delay_pipeline[55], 17'b00000000000000000}) +
        $signed({delay_pipeline[55], 13'b0000000000000}) +
        $signed({delay_pipeline[55], 8'b00000000}) +
        $signed({delay_pipeline[55], 6'b000000}) -
        $signed({delay_pipeline[55], 4'b0000}) +
        $signed({delay_pipeline[55], 1'b0}));
  assign product56 = $signed({{6{mulcsd_temp_5[41]}}, mulcsd_temp_5});

// For FCSD of 23112, optimizing to CSD due to lower cost
  assign mulcsd_temp_6 = 
        $signed({delay_pipeline[54], 14'b00000000000000}) +
        $signed({delay_pipeline[54], 13'b0000000000000}) -
        $signed({delay_pipeline[54], 11'b00000000000}) +
        $signed({delay_pipeline[54], 9'b000000000}) +
        $signed({delay_pipeline[54], 6'b000000}) +
        $signed({delay_pipeline[54], 3'b000});
  assign product55 = $signed({{9{mulcsd_temp_6[38]}}, mulcsd_temp_6});

// For FCSD of 131906, optimizing to CSD due to lower cost
  assign mulcsd_temp_7 = 
        $signed({delay_pipeline[53], 17'b00000000000000000}) +
        $signed({delay_pipeline[53], 10'b0000000000}) -
        $signed({delay_pipeline[53], 8'b00000000}) +
        $signed({delay_pipeline[53], 6'b000000}) +
        $signed({delay_pipeline[53], 1'b0});
  assign product54 = $signed({{6{mulcsd_temp_7[41]}}, mulcsd_temp_7});

// For FCSD of 74295, using factorization: 127 65 9 
// 
  assign mulcsd_temp_8 = 
        $signed({delay_pipeline[52], 7'b0000000}) -
        delay_pipeline[52];
  assign factoredcsd_temp = mulcsd_temp_8[30:0];

  assign mulcsd_temp_9 = 
        $signed({factoredcsd_temp, 6'b000000}) +
        factoredcsd_temp;
  assign factoredcsd_temp_1 = mulcsd_temp_9;

  assign mulcsd_temp_10 = 
        $signed({factoredcsd_temp_1, 3'b000}) +
        factoredcsd_temp_1;
  assign factoredcsd_temp_2 = mulcsd_temp_10[40:0];

  assign factoredcsd_temp_3 = factoredcsd_temp_2;

  assign product53 = $signed({{7{factoredcsd_temp_3[40]}}, factoredcsd_temp_3});

// For FCSD of -89052, optimizing to CSD due to lower cost
  assign mulcsd_temp_11 = - (
        $signed({delay_pipeline[51], 16'b0000000000000000}) +
        $signed({delay_pipeline[51], 14'b00000000000000}) +
        $signed({delay_pipeline[51], 13'b0000000000000}) -
        $signed({delay_pipeline[51], 11'b00000000000}) +
        $signed({delay_pipeline[51], 10'b0000000000}) -
        $signed({delay_pipeline[51], 6'b000000}) +
        $signed({delay_pipeline[51], 5'b00000}) -
        $signed({delay_pipeline[51], 2'b00}));
  assign product52 = $signed({{7{mulcsd_temp_11[40]}}, mulcsd_temp_11});

// For FCSD of -162510, optimizing to CSD due to lower cost
  assign mulcsd_temp_12 = - (
        $signed({delay_pipeline[50], 17'b00000000000000000}) +
        $signed({delay_pipeline[50], 15'b000000000000000}) -
        $signed({delay_pipeline[50], 11'b00000000000}) +
        $signed({delay_pipeline[50], 9'b000000000}) +
        $signed({delay_pipeline[50], 8'b00000000}) -
        $signed({delay_pipeline[50], 6'b000000}) +
        $signed({delay_pipeline[50], 4'b0000}) -
        $signed({delay_pipeline[50], 1'b0}));
  assign product51 = $signed({{6{mulcsd_temp_12[41]}}, mulcsd_temp_12});

// For FCSD of -34015, optimizing to CSD due to lower cost
  assign mulcsd_temp_13 = - (
        $signed({delay_pipeline[49], 15'b000000000000000}) +
        $signed({delay_pipeline[49], 10'b0000000000}) +
        $signed({delay_pipeline[49], 8'b00000000}) -
        $signed({delay_pipeline[49], 6'b000000}) +
        $signed({delay_pipeline[49], 5'b00000}) -
        delay_pipeline[49]);
  assign product50 = $signed({{8{mulcsd_temp_13[39]}}, mulcsd_temp_13});

// For FCSD of 165634, optimizing to CSD due to lower cost
  assign mulcsd_temp_14 = 
        $signed({delay_pipeline[48], 17'b00000000000000000}) +
        $signed({delay_pipeline[48], 15'b000000000000000}) +
        $signed({delay_pipeline[48], 11'b00000000000}) -
        $signed({delay_pipeline[48], 8'b00000000}) +
        $signed({delay_pipeline[48], 1'b0});
  assign product49 = $signed({{6{mulcsd_temp_14[41]}}, mulcsd_temp_14});

// For FCSD of 185191, optimizing to CSD due to lower cost
  assign mulcsd_temp_15 = 
        $signed({delay_pipeline[47], 17'b00000000000000000}) +
        $signed({delay_pipeline[47], 16'b0000000000000000}) -
        $signed({delay_pipeline[47], 14'b00000000000000}) +
        $signed({delay_pipeline[47], 12'b000000000000}) +
        $signed({delay_pipeline[47], 10'b0000000000}) -
        $signed({delay_pipeline[47], 8'b00000000}) +
        $signed({delay_pipeline[47], 7'b0000000}) -
        $signed({delay_pipeline[47], 5'b00000}) +
        $signed({delay_pipeline[47], 3'b000}) -
        delay_pipeline[47];
  assign product48 = $signed({{6{mulcsd_temp_15[41]}}, mulcsd_temp_15});

// For FCSD of -40142, optimizing to CSD due to lower cost
  assign mulcsd_temp_16 = - (
        $signed({delay_pipeline[46], 15'b000000000000000}) +
        $signed({delay_pipeline[46], 13'b0000000000000}) -
        $signed({delay_pipeline[46], 10'b0000000000}) +
        $signed({delay_pipeline[46], 8'b00000000}) -
        $signed({delay_pipeline[46], 6'b000000}) +
        $signed({delay_pipeline[46], 4'b0000}) -
        $signed({delay_pipeline[46], 1'b0}));
  assign product47 = $signed({{8{mulcsd_temp_16[39]}}, mulcsd_temp_16});

// For FCSD of -261753, optimizing to CSD due to lower cost
  assign mulcsd_temp_17 = - (
        $signed({delay_pipeline[45], 18'b000000000000000000}) -
        $signed({delay_pipeline[45], 9'b000000000}) +
        $signed({delay_pipeline[45], 7'b0000000}) -
        $signed({delay_pipeline[45], 3'b000}) +
        delay_pipeline[45]);
  assign product46 = $signed({{5{mulcsd_temp_17[42]}}, mulcsd_temp_17});

// For FCSD of -180005, optimizing to CSD due to lower cost
  assign mulcsd_temp_18 = - (
        $signed({delay_pipeline[44], 17'b00000000000000000}) +
        $signed({delay_pipeline[44], 15'b000000000000000}) +
        $signed({delay_pipeline[44], 14'b00000000000000}) -
        $signed({delay_pipeline[44], 8'b00000000}) +
        $signed({delay_pipeline[44], 5'b00000}) +
        $signed({delay_pipeline[44], 2'b00}) +
        delay_pipeline[44]);
  assign product45 = $signed({{6{mulcsd_temp_18[41]}}, mulcsd_temp_18});

// For FCSD of 165623, optimizing to CSD due to lower cost
  assign mulcsd_temp_19 = 
        $signed({delay_pipeline[43], 17'b00000000000000000}) +
        $signed({delay_pipeline[43], 15'b000000000000000}) +
        $signed({delay_pipeline[43], 11'b00000000000}) -
        $signed({delay_pipeline[43], 9'b000000000}) +
        $signed({delay_pipeline[43], 8'b00000000}) -
        $signed({delay_pipeline[43], 4'b0000}) +
        $signed({delay_pipeline[43], 3'b000}) -
        delay_pipeline[43];
  assign product44 = $signed({{6{mulcsd_temp_19[41]}}, mulcsd_temp_19});

// For FCSD of 369923, optimizing to CSD due to lower cost
  assign mulcsd_temp_20 = 
        $signed({delay_pipeline[42], 18'b000000000000000000}) +
        $signed({delay_pipeline[42], 17'b00000000000000000}) -
        $signed({delay_pipeline[42], 15'b000000000000000}) +
        $signed({delay_pipeline[42], 13'b0000000000000}) +
        $signed({delay_pipeline[42], 10'b0000000000}) +
        $signed({delay_pipeline[42], 8'b00000000}) +
        $signed({delay_pipeline[42], 2'b00}) -
        delay_pipeline[42];
  assign product43 = $signed({{5{mulcsd_temp_20[42]}}, mulcsd_temp_20});

// For FCSD of 119134, optimizing to CSD due to lower cost
  assign mulcsd_temp_21 = 
        $signed({delay_pipeline[41], 17'b00000000000000000}) -
        $signed({delay_pipeline[41], 14'b00000000000000}) +
        $signed({delay_pipeline[41], 12'b000000000000}) +
        $signed({delay_pipeline[41], 8'b00000000}) +
        $signed({delay_pipeline[41], 6'b000000}) +
        $signed({delay_pipeline[41], 5'b00000}) -
        $signed({delay_pipeline[41], 1'b0});
  assign product42 = $signed({{6{mulcsd_temp_21[41]}}, mulcsd_temp_21});

// For FCSD of -363095, optimizing to CSD due to lower cost
  assign mulcsd_temp_22 = - (
        $signed({delay_pipeline[40], 18'b000000000000000000}) +
        $signed({delay_pipeline[40], 17'b00000000000000000}) -
        $signed({delay_pipeline[40], 15'b000000000000000}) +
        $signed({delay_pipeline[40], 11'b00000000000}) +
        $signed({delay_pipeline[40], 9'b000000000}) +
        $signed({delay_pipeline[40], 6'b000000}) +
        $signed({delay_pipeline[40], 4'b0000}) +
        $signed({delay_pipeline[40], 3'b000}) -
        delay_pipeline[40]);
  assign product41 = $signed({{5{mulcsd_temp_22[42]}}, mulcsd_temp_22});

// For FCSD of -477389, optimizing to CSD due to lower cost
  assign mulcsd_temp_23 = - (
        $signed({delay_pipeline[39], 19'b0000000000000000000}) -
        $signed({delay_pipeline[39], 16'b0000000000000000}) +
        $signed({delay_pipeline[39], 14'b00000000000000}) +
        $signed({delay_pipeline[39], 11'b00000000000}) +
        $signed({delay_pipeline[39], 8'b00000000}) -
        $signed({delay_pipeline[39], 6'b000000}) +
        $signed({delay_pipeline[39], 4'b0000}) -
        $signed({delay_pipeline[39], 2'b00}) +
        delay_pipeline[39]);
  assign product40 = $signed({{4{mulcsd_temp_23[43]}}, mulcsd_temp_23});

// For FCSD of 44417, optimizing to CSD due to lower cost
  assign mulcsd_temp_24 = 
        $signed({delay_pipeline[38], 15'b000000000000000}) +
        $signed({delay_pipeline[38], 13'b0000000000000}) +
        $signed({delay_pipeline[38], 12'b000000000000}) -
        $signed({delay_pipeline[38], 10'b0000000000}) +
        $signed({delay_pipeline[38], 9'b000000000}) -
        $signed({delay_pipeline[38], 7'b0000000}) +
        delay_pipeline[38];
  assign product39 = $signed({{8{mulcsd_temp_24[39]}}, mulcsd_temp_24});

// For FCSD of 679337, using factorization: 449 89 17 
// 
  assign mulcsd_temp_25 = 
        $signed({delay_pipeline[37], 9'b000000000}) -
        $signed({delay_pipeline[37], 6'b000000}) +
        delay_pipeline[37];
  assign factoredcsd_temp_4 = mulcsd_temp_25[32:0];

  assign mulcsd_temp_26 = 
        $signed({factoredcsd_temp_4, 6'b000000}) +
        $signed({factoredcsd_temp_4, 5'b00000}) -
        $signed({factoredcsd_temp_4, 3'b000}) +
        factoredcsd_temp_4;
  assign factoredcsd_temp_5 = mulcsd_temp_26;

  assign mulcsd_temp_27 = 
        $signed({factoredcsd_temp_5, 4'b0000}) +
        factoredcsd_temp_5;
  assign factoredcsd_temp_6 = mulcsd_temp_27[43:0];

  assign factoredcsd_temp_7 = factoredcsd_temp_6;

  assign product38 = $signed({{4{factoredcsd_temp_7[43]}}, factoredcsd_temp_7});

// For FCSD of 569579, optimizing to CSD due to lower cost
  assign mulcsd_temp_28 = 
        $signed({delay_pipeline[36], 19'b0000000000000000000}) +
        $signed({delay_pipeline[36], 15'b000000000000000}) +
        $signed({delay_pipeline[36], 14'b00000000000000}) -
        $signed({delay_pipeline[36], 12'b000000000000}) +
        $signed({delay_pipeline[36], 8'b00000000}) -
        $signed({delay_pipeline[36], 5'b00000}) +
        $signed({delay_pipeline[36], 3'b000}) +
        $signed({delay_pipeline[36], 2'b00}) -
        delay_pipeline[36];
  assign product37 = $signed({{4{mulcsd_temp_28[43]}}, mulcsd_temp_28});

// For FCSD of -437466, using factorization: 72911 3 2 
// 
  assign mulcsd_temp_29 = 
        $signed({delay_pipeline[35], 16'b0000000000000000}) +
        $signed({delay_pipeline[35], 13'b0000000000000}) -
        $signed({delay_pipeline[35], 10'b0000000000}) +
        $signed({delay_pipeline[35], 8'b00000000}) -
        $signed({delay_pipeline[35], 6'b000000}) +
        $signed({delay_pipeline[35], 4'b0000}) -
        delay_pipeline[35];
  assign factoredcsd_temp_8 = mulcsd_temp_29;

  assign mulcsd_temp_30 = 
        $signed({factoredcsd_temp_8, 2'b00}) -
        factoredcsd_temp_8;
  assign factoredcsd_temp_9 = mulcsd_temp_30[42:0];

  assign factoredcsd_temp_10 = $signed({factoredcsd_temp_9[41:0], 1'b0});

  assign unaryminus_temp = (factoredcsd_temp_10==43'b1000000000000000000000000000000000000000000) ? $signed({1'b0, factoredcsd_temp_10}) : -factoredcsd_temp_10;
  assign product36 = $signed({{4{unaryminus_temp[43]}}, unaryminus_temp});

// For FCSD of -1308205, using factorization: 261641 5 
// 
  assign mulcsd_temp_31 = 
        $signed({delay_pipeline[34], 18'b000000000000000000}) -
        $signed({delay_pipeline[34], 9'b000000000}) +
        $signed({delay_pipeline[34], 3'b000}) +
        delay_pipeline[34];
  assign factoredcsd_temp_11 = mulcsd_temp_31[41:0];

  assign mulcsd_temp_32 = 
        $signed({factoredcsd_temp_11, 2'b00}) +
        factoredcsd_temp_11;
  assign factoredcsd_temp_12 = mulcsd_temp_32;

  assign factoredcsd_temp_13 = factoredcsd_temp_12;

  assign unaryminus_temp_1 = (factoredcsd_temp_13==45'b100000000000000000000000000000000000000000000) ? $signed({1'b0, factoredcsd_temp_13}) : -factoredcsd_temp_13;
  assign product35 = $signed({{2{unaryminus_temp_1[45]}}, unaryminus_temp_1});

// For FCSD of -631681, optimizing to CSD due to lower cost
  assign mulcsd_temp_33 = - (
        $signed({delay_pipeline[33], 19'b0000000000000000000}) +
        $signed({delay_pipeline[33], 17'b00000000000000000}) -
        $signed({delay_pipeline[33], 15'b000000000000000}) +
        $signed({delay_pipeline[33], 13'b0000000000000}) +
        $signed({delay_pipeline[33], 10'b0000000000}) -
        $signed({delay_pipeline[33], 7'b0000000}) +
        delay_pipeline[33]);
  assign product34 = $signed({{4{mulcsd_temp_33[43]}}, mulcsd_temp_33});

// For FCSD of 1910541, optimizing to CSD due to lower cost
  assign mulcsd_temp_34 = 
        $signed({delay_pipeline[32], 21'b000000000000000000000}) -
        $signed({delay_pipeline[32], 18'b000000000000000000}) +
        $signed({delay_pipeline[32], 16'b0000000000000000}) +
        $signed({delay_pipeline[32], 13'b0000000000000}) +
        $signed({delay_pipeline[32], 11'b00000000000}) -
        $signed({delay_pipeline[32], 8'b00000000}) +
        $signed({delay_pipeline[32], 4'b0000}) -
        $signed({delay_pipeline[32], 2'b00}) +
        delay_pipeline[32];
  assign product33 = $signed({{2{mulcsd_temp_34[45]}}, mulcsd_temp_34});

// For FCSD of 4910113, optimizing to CSD due to lower cost
  assign mulcsd_temp_35 = 
        $signed({delay_pipeline[31], 22'b0000000000000000000000}) +
        $signed({delay_pipeline[31], 19'b0000000000000000000}) +
        $signed({delay_pipeline[31], 17'b00000000000000000}) +
        $signed({delay_pipeline[31], 16'b0000000000000000}) -
        $signed({delay_pipeline[31], 13'b0000000000000}) +
        $signed({delay_pipeline[31], 12'b000000000000}) -
        $signed({delay_pipeline[31], 10'b0000000000}) +
        $signed({delay_pipeline[31], 5'b00000}) +
        delay_pipeline[31];
  assign product32 = $signed({{1{mulcsd_temp_35[46]}}, mulcsd_temp_35});

// For FCSD of 6245928, optimizing to CSD due to lower cost
  assign mulcsd_temp_36 = 
        $signed({delay_pipeline[30], 22'b0000000000000000000000}) +
        $signed({delay_pipeline[30], 21'b000000000000000000000}) -
        $signed({delay_pipeline[30], 16'b0000000000000000}) +
        $signed({delay_pipeline[30], 14'b00000000000000}) +
        $signed({delay_pipeline[30], 12'b000000000000}) -
        $signed({delay_pipeline[30], 9'b000000000}) +
        $signed({delay_pipeline[30], 5'b00000}) +
        $signed({delay_pipeline[30], 3'b000});
  assign product31 = $signed({{1{mulcsd_temp_36[46]}}, mulcsd_temp_36});

// For FCSD of 4910113, optimizing to CSD due to lower cost
  assign mulcsd_temp_37 = 
        $signed({delay_pipeline[29], 22'b0000000000000000000000}) +
        $signed({delay_pipeline[29], 19'b0000000000000000000}) +
        $signed({delay_pipeline[29], 17'b00000000000000000}) +
        $signed({delay_pipeline[29], 16'b0000000000000000}) -
        $signed({delay_pipeline[29], 13'b0000000000000}) +
        $signed({delay_pipeline[29], 12'b000000000000}) -
        $signed({delay_pipeline[29], 10'b0000000000}) +
        $signed({delay_pipeline[29], 5'b00000}) +
        delay_pipeline[29];
  assign product30 = $signed({{1{mulcsd_temp_37[46]}}, mulcsd_temp_37});

// For FCSD of 1910541, optimizing to CSD due to lower cost
  assign mulcsd_temp_38 = 
        $signed({delay_pipeline[28], 21'b000000000000000000000}) -
        $signed({delay_pipeline[28], 18'b000000000000000000}) +
        $signed({delay_pipeline[28], 16'b0000000000000000}) +
        $signed({delay_pipeline[28], 13'b0000000000000}) +
        $signed({delay_pipeline[28], 11'b00000000000}) -
        $signed({delay_pipeline[28], 8'b00000000}) +
        $signed({delay_pipeline[28], 4'b0000}) -
        $signed({delay_pipeline[28], 2'b00}) +
        delay_pipeline[28];
  assign product29 = $signed({{2{mulcsd_temp_38[45]}}, mulcsd_temp_38});

// For FCSD of -631681, optimizing to CSD due to lower cost
  assign mulcsd_temp_39 = - (
        $signed({delay_pipeline[27], 19'b0000000000000000000}) +
        $signed({delay_pipeline[27], 17'b00000000000000000}) -
        $signed({delay_pipeline[27], 15'b000000000000000}) +
        $signed({delay_pipeline[27], 13'b0000000000000}) +
        $signed({delay_pipeline[27], 10'b0000000000}) -
        $signed({delay_pipeline[27], 7'b0000000}) +
        delay_pipeline[27]);
  assign product28 = $signed({{4{mulcsd_temp_39[43]}}, mulcsd_temp_39});

// For FCSD of -1308205, using factorization: 261641 5 
// 
  assign mulcsd_temp_40 = 
        $signed({delay_pipeline[26], 18'b000000000000000000}) -
        $signed({delay_pipeline[26], 9'b000000000}) +
        $signed({delay_pipeline[26], 3'b000}) +
        delay_pipeline[26];
  assign factoredcsd_temp_14 = mulcsd_temp_40[41:0];

  assign mulcsd_temp_41 = 
        $signed({factoredcsd_temp_14, 2'b00}) +
        factoredcsd_temp_14;
  assign factoredcsd_temp_15 = mulcsd_temp_41;

  assign factoredcsd_temp_16 = factoredcsd_temp_15;

  assign unaryminus_temp_2 = (factoredcsd_temp_16==45'b100000000000000000000000000000000000000000000) ? $signed({1'b0, factoredcsd_temp_16}) : -factoredcsd_temp_16;
  assign product27 = $signed({{2{unaryminus_temp_2[45]}}, unaryminus_temp_2});

// For FCSD of -437466, using factorization: 72911 3 2 
// 
  assign mulcsd_temp_42 = 
        $signed({delay_pipeline[25], 16'b0000000000000000}) +
        $signed({delay_pipeline[25], 13'b0000000000000}) -
        $signed({delay_pipeline[25], 10'b0000000000}) +
        $signed({delay_pipeline[25], 8'b00000000}) -
        $signed({delay_pipeline[25], 6'b000000}) +
        $signed({delay_pipeline[25], 4'b0000}) -
        delay_pipeline[25];
  assign factoredcsd_temp_17 = mulcsd_temp_42;

  assign mulcsd_temp_43 = 
        $signed({factoredcsd_temp_17, 2'b00}) -
        factoredcsd_temp_17;
  assign factoredcsd_temp_18 = mulcsd_temp_43[42:0];

  assign factoredcsd_temp_19 = $signed({factoredcsd_temp_18[41:0], 1'b0});

  assign unaryminus_temp_3 = (factoredcsd_temp_19==43'b1000000000000000000000000000000000000000000) ? $signed({1'b0, factoredcsd_temp_19}) : -factoredcsd_temp_19;
  assign product26 = $signed({{4{unaryminus_temp_3[43]}}, unaryminus_temp_3});

// For FCSD of 569579, optimizing to CSD due to lower cost
  assign mulcsd_temp_44 = 
        $signed({delay_pipeline[24], 19'b0000000000000000000}) +
        $signed({delay_pipeline[24], 15'b000000000000000}) +
        $signed({delay_pipeline[24], 14'b00000000000000}) -
        $signed({delay_pipeline[24], 12'b000000000000}) +
        $signed({delay_pipeline[24], 8'b00000000}) -
        $signed({delay_pipeline[24], 5'b00000}) +
        $signed({delay_pipeline[24], 3'b000}) +
        $signed({delay_pipeline[24], 2'b00}) -
        delay_pipeline[24];
  assign product25 = $signed({{4{mulcsd_temp_44[43]}}, mulcsd_temp_44});

// For FCSD of 679337, using factorization: 449 89 17 
// 
  assign mulcsd_temp_45 = 
        $signed({delay_pipeline[23], 9'b000000000}) -
        $signed({delay_pipeline[23], 6'b000000}) +
        delay_pipeline[23];
  assign factoredcsd_temp_20 = mulcsd_temp_45[32:0];

  assign mulcsd_temp_46 = 
        $signed({factoredcsd_temp_20, 6'b000000}) +
        $signed({factoredcsd_temp_20, 5'b00000}) -
        $signed({factoredcsd_temp_20, 3'b000}) +
        factoredcsd_temp_20;
  assign factoredcsd_temp_21 = mulcsd_temp_46;

  assign mulcsd_temp_47 = 
        $signed({factoredcsd_temp_21, 4'b0000}) +
        factoredcsd_temp_21;
  assign factoredcsd_temp_22 = mulcsd_temp_47[43:0];

  assign factoredcsd_temp_23 = factoredcsd_temp_22;

  assign product24 = $signed({{4{factoredcsd_temp_23[43]}}, factoredcsd_temp_23});

// For FCSD of 44417, optimizing to CSD due to lower cost
  assign mulcsd_temp_48 = 
        $signed({delay_pipeline[22], 15'b000000000000000}) +
        $signed({delay_pipeline[22], 13'b0000000000000}) +
        $signed({delay_pipeline[22], 12'b000000000000}) -
        $signed({delay_pipeline[22], 10'b0000000000}) +
        $signed({delay_pipeline[22], 9'b000000000}) -
        $signed({delay_pipeline[22], 7'b0000000}) +
        delay_pipeline[22];
  assign product23 = $signed({{8{mulcsd_temp_48[39]}}, mulcsd_temp_48});

// For FCSD of -477389, optimizing to CSD due to lower cost
  assign mulcsd_temp_49 = - (
        $signed({delay_pipeline[21], 19'b0000000000000000000}) -
        $signed({delay_pipeline[21], 16'b0000000000000000}) +
        $signed({delay_pipeline[21], 14'b00000000000000}) +
        $signed({delay_pipeline[21], 11'b00000000000}) +
        $signed({delay_pipeline[21], 8'b00000000}) -
        $signed({delay_pipeline[21], 6'b000000}) +
        $signed({delay_pipeline[21], 4'b0000}) -
        $signed({delay_pipeline[21], 2'b00}) +
        delay_pipeline[21]);
  assign product22 = $signed({{4{mulcsd_temp_49[43]}}, mulcsd_temp_49});

// For FCSD of -363095, optimizing to CSD due to lower cost
  assign mulcsd_temp_50 = - (
        $signed({delay_pipeline[20], 18'b000000000000000000}) +
        $signed({delay_pipeline[20], 17'b00000000000000000}) -
        $signed({delay_pipeline[20], 15'b000000000000000}) +
        $signed({delay_pipeline[20], 11'b00000000000}) +
        $signed({delay_pipeline[20], 9'b000000000}) +
        $signed({delay_pipeline[20], 6'b000000}) +
        $signed({delay_pipeline[20], 4'b0000}) +
        $signed({delay_pipeline[20], 3'b000}) -
        delay_pipeline[20]);
  assign product21 = $signed({{5{mulcsd_temp_50[42]}}, mulcsd_temp_50});

// For FCSD of 119134, optimizing to CSD due to lower cost
  assign mulcsd_temp_51 = 
        $signed({delay_pipeline[19], 17'b00000000000000000}) -
        $signed({delay_pipeline[19], 14'b00000000000000}) +
        $signed({delay_pipeline[19], 12'b000000000000}) +
        $signed({delay_pipeline[19], 8'b00000000}) +
        $signed({delay_pipeline[19], 6'b000000}) +
        $signed({delay_pipeline[19], 5'b00000}) -
        $signed({delay_pipeline[19], 1'b0});
  assign product20 = $signed({{6{mulcsd_temp_51[41]}}, mulcsd_temp_51});

// For FCSD of 369923, optimizing to CSD due to lower cost
  assign mulcsd_temp_52 = 
        $signed({delay_pipeline[18], 18'b000000000000000000}) +
        $signed({delay_pipeline[18], 17'b00000000000000000}) -
        $signed({delay_pipeline[18], 15'b000000000000000}) +
        $signed({delay_pipeline[18], 13'b0000000000000}) +
        $signed({delay_pipeline[18], 10'b0000000000}) +
        $signed({delay_pipeline[18], 8'b00000000}) +
        $signed({delay_pipeline[18], 2'b00}) -
        delay_pipeline[18];
  assign product19 = $signed({{5{mulcsd_temp_52[42]}}, mulcsd_temp_52});

// For FCSD of 165623, optimizing to CSD due to lower cost
  assign mulcsd_temp_53 = 
        $signed({delay_pipeline[17], 17'b00000000000000000}) +
        $signed({delay_pipeline[17], 15'b000000000000000}) +
        $signed({delay_pipeline[17], 11'b00000000000}) -
        $signed({delay_pipeline[17], 9'b000000000}) +
        $signed({delay_pipeline[17], 8'b00000000}) -
        $signed({delay_pipeline[17], 4'b0000}) +
        $signed({delay_pipeline[17], 3'b000}) -
        delay_pipeline[17];
  assign product18 = $signed({{6{mulcsd_temp_53[41]}}, mulcsd_temp_53});

// For FCSD of -180005, optimizing to CSD due to lower cost
  assign mulcsd_temp_54 = - (
        $signed({delay_pipeline[16], 17'b00000000000000000}) +
        $signed({delay_pipeline[16], 15'b000000000000000}) +
        $signed({delay_pipeline[16], 14'b00000000000000}) -
        $signed({delay_pipeline[16], 8'b00000000}) +
        $signed({delay_pipeline[16], 5'b00000}) +
        $signed({delay_pipeline[16], 2'b00}) +
        delay_pipeline[16]);
  assign product17 = $signed({{6{mulcsd_temp_54[41]}}, mulcsd_temp_54});

// For FCSD of -261753, optimizing to CSD due to lower cost
  assign mulcsd_temp_55 = - (
        $signed({delay_pipeline[15], 18'b000000000000000000}) -
        $signed({delay_pipeline[15], 9'b000000000}) +
        $signed({delay_pipeline[15], 7'b0000000}) -
        $signed({delay_pipeline[15], 3'b000}) +
        delay_pipeline[15]);
  assign product16 = $signed({{5{mulcsd_temp_55[42]}}, mulcsd_temp_55});

// For FCSD of -40142, optimizing to CSD due to lower cost
  assign mulcsd_temp_56 = - (
        $signed({delay_pipeline[14], 15'b000000000000000}) +
        $signed({delay_pipeline[14], 13'b0000000000000}) -
        $signed({delay_pipeline[14], 10'b0000000000}) +
        $signed({delay_pipeline[14], 8'b00000000}) -
        $signed({delay_pipeline[14], 6'b000000}) +
        $signed({delay_pipeline[14], 4'b0000}) -
        $signed({delay_pipeline[14], 1'b0}));
  assign product15 = $signed({{8{mulcsd_temp_56[39]}}, mulcsd_temp_56});

// For FCSD of 185191, optimizing to CSD due to lower cost
  assign mulcsd_temp_57 = 
        $signed({delay_pipeline[13], 17'b00000000000000000}) +
        $signed({delay_pipeline[13], 16'b0000000000000000}) -
        $signed({delay_pipeline[13], 14'b00000000000000}) +
        $signed({delay_pipeline[13], 12'b000000000000}) +
        $signed({delay_pipeline[13], 10'b0000000000}) -
        $signed({delay_pipeline[13], 8'b00000000}) +
        $signed({delay_pipeline[13], 7'b0000000}) -
        $signed({delay_pipeline[13], 5'b00000}) +
        $signed({delay_pipeline[13], 3'b000}) -
        delay_pipeline[13];
  assign product14 = $signed({{6{mulcsd_temp_57[41]}}, mulcsd_temp_57});

// For FCSD of 165634, optimizing to CSD due to lower cost
  assign mulcsd_temp_58 = 
        $signed({delay_pipeline[12], 17'b00000000000000000}) +
        $signed({delay_pipeline[12], 15'b000000000000000}) +
        $signed({delay_pipeline[12], 11'b00000000000}) -
        $signed({delay_pipeline[12], 8'b00000000}) +
        $signed({delay_pipeline[12], 1'b0});
  assign product13 = $signed({{6{mulcsd_temp_58[41]}}, mulcsd_temp_58});

// For FCSD of -34015, optimizing to CSD due to lower cost
  assign mulcsd_temp_59 = - (
        $signed({delay_pipeline[11], 15'b000000000000000}) +
        $signed({delay_pipeline[11], 10'b0000000000}) +
        $signed({delay_pipeline[11], 8'b00000000}) -
        $signed({delay_pipeline[11], 6'b000000}) +
        $signed({delay_pipeline[11], 5'b00000}) -
        delay_pipeline[11]);
  assign product12 = $signed({{8{mulcsd_temp_59[39]}}, mulcsd_temp_59});

// For FCSD of -162510, optimizing to CSD due to lower cost
  assign mulcsd_temp_60 = - (
        $signed({delay_pipeline[10], 17'b00000000000000000}) +
        $signed({delay_pipeline[10], 15'b000000000000000}) -
        $signed({delay_pipeline[10], 11'b00000000000}) +
        $signed({delay_pipeline[10], 9'b000000000}) +
        $signed({delay_pipeline[10], 8'b00000000}) -
        $signed({delay_pipeline[10], 6'b000000}) +
        $signed({delay_pipeline[10], 4'b0000}) -
        $signed({delay_pipeline[10], 1'b0}));
  assign product11 = $signed({{6{mulcsd_temp_60[41]}}, mulcsd_temp_60});

// For FCSD of -89052, optimizing to CSD due to lower cost
  assign mulcsd_temp_61 = - (
        $signed({delay_pipeline[9], 16'b0000000000000000}) +
        $signed({delay_pipeline[9], 14'b00000000000000}) +
        $signed({delay_pipeline[9], 13'b0000000000000}) -
        $signed({delay_pipeline[9], 11'b00000000000}) +
        $signed({delay_pipeline[9], 10'b0000000000}) -
        $signed({delay_pipeline[9], 6'b000000}) +
        $signed({delay_pipeline[9], 5'b00000}) -
        $signed({delay_pipeline[9], 2'b00}));
  assign product10 = $signed({{7{mulcsd_temp_61[40]}}, mulcsd_temp_61});

// For FCSD of 74295, using factorization: 127 65 9 
// 
  assign mulcsd_temp_62 = 
        $signed({delay_pipeline[8], 7'b0000000}) -
        delay_pipeline[8];
  assign factoredcsd_temp_24 = mulcsd_temp_62[30:0];

  assign mulcsd_temp_63 = 
        $signed({factoredcsd_temp_24, 6'b000000}) +
        factoredcsd_temp_24;
  assign factoredcsd_temp_25 = mulcsd_temp_63;

  assign mulcsd_temp_64 = 
        $signed({factoredcsd_temp_25, 3'b000}) +
        factoredcsd_temp_25;
  assign factoredcsd_temp_26 = mulcsd_temp_64[40:0];

  assign factoredcsd_temp_27 = factoredcsd_temp_26;

  assign product9 = $signed({{7{factoredcsd_temp_27[40]}}, factoredcsd_temp_27});

// For FCSD of 131906, optimizing to CSD due to lower cost
  assign mulcsd_temp_65 = 
        $signed({delay_pipeline[7], 17'b00000000000000000}) +
        $signed({delay_pipeline[7], 10'b0000000000}) -
        $signed({delay_pipeline[7], 8'b00000000}) +
        $signed({delay_pipeline[7], 6'b000000}) +
        $signed({delay_pipeline[7], 1'b0});
  assign product8 = $signed({{6{mulcsd_temp_65[41]}}, mulcsd_temp_65});

// For FCSD of 23112, optimizing to CSD due to lower cost
  assign mulcsd_temp_66 = 
        $signed({delay_pipeline[6], 14'b00000000000000}) +
        $signed({delay_pipeline[6], 13'b0000000000000}) -
        $signed({delay_pipeline[6], 11'b00000000000}) +
        $signed({delay_pipeline[6], 9'b000000000}) +
        $signed({delay_pipeline[6], 6'b000000}) +
        $signed({delay_pipeline[6], 3'b000});
  assign product7 = $signed({{9{mulcsd_temp_66[38]}}, mulcsd_temp_66});

// For FCSD of -139570, optimizing to CSD due to lower cost
  assign mulcsd_temp_67 = - (
        $signed({delay_pipeline[5], 17'b00000000000000000}) +
        $signed({delay_pipeline[5], 13'b0000000000000}) +
        $signed({delay_pipeline[5], 8'b00000000}) +
        $signed({delay_pipeline[5], 6'b000000}) -
        $signed({delay_pipeline[5], 4'b0000}) +
        $signed({delay_pipeline[5], 1'b0}));
  assign product6 = $signed({{6{mulcsd_temp_67[41]}}, mulcsd_temp_67});

// For FCSD of -213227, optimizing to CSD due to lower cost
  assign mulcsd_temp_68 = - (
        $signed({delay_pipeline[4], 18'b000000000000000000}) -
        $signed({delay_pipeline[4], 16'b0000000000000000}) +
        $signed({delay_pipeline[4], 14'b00000000000000}) +
        $signed({delay_pipeline[4], 8'b00000000}) -
        $signed({delay_pipeline[4], 5'b00000}) +
        $signed({delay_pipeline[4], 3'b000}) +
        $signed({delay_pipeline[4], 2'b00}) -
        delay_pipeline[4]);
  assign product5 = $signed({{5{mulcsd_temp_68[42]}}, mulcsd_temp_68});

// For FCSD of -163207, optimizing to CSD due to lower cost
  assign mulcsd_temp_69 = - (
        $signed({delay_pipeline[3], 17'b00000000000000000}) +
        $signed({delay_pipeline[3], 15'b000000000000000}) -
        $signed({delay_pipeline[3], 10'b0000000000}) +
        $signed({delay_pipeline[3], 9'b000000000}) -
        $signed({delay_pipeline[3], 7'b0000000}) +
        $signed({delay_pipeline[3], 3'b000}) -
        delay_pipeline[3]);
  assign product4 = $signed({{6{mulcsd_temp_69[41]}}, mulcsd_temp_69});

// For FCSD of -63182, optimizing to CSD due to lower cost
  assign mulcsd_temp_70 = - (
        $signed({delay_pipeline[2], 16'b0000000000000000}) -
        $signed({delay_pipeline[2], 12'b000000000000}) +
        $signed({delay_pipeline[2], 11'b00000000000}) -
        $signed({delay_pipeline[2], 9'b000000000}) +
        $signed({delay_pipeline[2], 8'b00000000}) -
        $signed({delay_pipeline[2], 6'b000000}) +
        $signed({delay_pipeline[2], 4'b0000}) -
        $signed({delay_pipeline[2], 1'b0}));
  assign product3 = $signed({{7{mulcsd_temp_70[40]}}, mulcsd_temp_70});

// For FCSD of 3219, optimizing to CSD due to lower cost
  assign mulcsd_temp_71 = 
        $signed({delay_pipeline[1], 12'b000000000000}) -
        $signed({delay_pipeline[1], 10'b0000000000}) +
        $signed({delay_pipeline[1], 7'b0000000}) +
        $signed({delay_pipeline[1], 4'b0000}) +
        $signed({delay_pipeline[1], 2'b00}) -
        delay_pipeline[1];
  assign product2 = $signed({{11{mulcsd_temp_71[36]}}, mulcsd_temp_71});

// For FCSD of 18287, optimizing to CSD due to lower cost
  assign mulcsd_temp_72 = 
        $signed({delay_pipeline[0], 14'b00000000000000}) +
        $signed({delay_pipeline[0], 11'b00000000000}) -
        $signed({delay_pipeline[0], 8'b00000000}) +
        $signed({delay_pipeline[0], 7'b0000000}) -
        $signed({delay_pipeline[0], 5'b00000}) +
        $signed({delay_pipeline[0], 4'b0000}) -
        delay_pipeline[0];
  assign product1 = $signed({{9{mulcsd_temp_72[38]}}, mulcsd_temp_72});

  assign add_signext = product61;
  assign add_signext_1 = product60;
  assign add_temp = add_signext + add_signext_1;
  assign sum1_1 = $signed({{5{add_temp[48]}}, add_temp});

  assign add_signext_2 = product59;
  assign add_signext_3 = product58;
  assign add_temp_1 = add_signext_2 + add_signext_3;
  assign sum1_2 = $signed({{5{add_temp_1[48]}}, add_temp_1});

  assign add_signext_4 = product57;
  assign add_signext_5 = product56;
  assign add_temp_2 = add_signext_4 + add_signext_5;
  assign sum1_3 = $signed({{5{add_temp_2[48]}}, add_temp_2});

  assign add_signext_6 = product55;
  assign add_signext_7 = product54;
  assign add_temp_3 = add_signext_6 + add_signext_7;
  assign sum1_4 = $signed({{5{add_temp_3[48]}}, add_temp_3});

  assign add_signext_8 = product53;
  assign add_signext_9 = product52;
  assign add_temp_4 = add_signext_8 + add_signext_9;
  assign sum1_5 = $signed({{5{add_temp_4[48]}}, add_temp_4});

  assign add_signext_10 = product51;
  assign add_signext_11 = product50;
  assign add_temp_5 = add_signext_10 + add_signext_11;
  assign sum1_6 = $signed({{5{add_temp_5[48]}}, add_temp_5});

  assign add_signext_12 = product49;
  assign add_signext_13 = product48;
  assign add_temp_6 = add_signext_12 + add_signext_13;
  assign sum1_7 = $signed({{5{add_temp_6[48]}}, add_temp_6});

  assign add_signext_14 = product47;
  assign add_signext_15 = product46;
  assign add_temp_7 = add_signext_14 + add_signext_15;
  assign sum1_8 = $signed({{5{add_temp_7[48]}}, add_temp_7});

  assign add_signext_16 = product45;
  assign add_signext_17 = product44;
  assign add_temp_8 = add_signext_16 + add_signext_17;
  assign sum1_9 = $signed({{5{add_temp_8[48]}}, add_temp_8});

  assign add_signext_18 = product43;
  assign add_signext_19 = product42;
  assign add_temp_9 = add_signext_18 + add_signext_19;
  assign sum1_10 = $signed({{5{add_temp_9[48]}}, add_temp_9});

  assign add_signext_20 = product41;
  assign add_signext_21 = product40;
  assign add_temp_10 = add_signext_20 + add_signext_21;
  assign sum1_11 = $signed({{5{add_temp_10[48]}}, add_temp_10});

  assign add_signext_22 = product39;
  assign add_signext_23 = product38;
  assign add_temp_11 = add_signext_22 + add_signext_23;
  assign sum1_12 = $signed({{5{add_temp_11[48]}}, add_temp_11});

  assign add_signext_24 = product37;
  assign add_signext_25 = product36;
  assign add_temp_12 = add_signext_24 + add_signext_25;
  assign sum1_13 = $signed({{5{add_temp_12[48]}}, add_temp_12});

  assign add_signext_26 = product35;
  assign add_signext_27 = product34;
  assign add_temp_13 = add_signext_26 + add_signext_27;
  assign sum1_14 = $signed({{5{add_temp_13[48]}}, add_temp_13});

  assign add_signext_28 = product33;
  assign add_signext_29 = product32;
  assign add_temp_14 = add_signext_28 + add_signext_29;
  assign sum1_15 = $signed({{5{add_temp_14[48]}}, add_temp_14});

  assign add_signext_30 = product31;
  assign add_signext_31 = product30;
  assign add_temp_15 = add_signext_30 + add_signext_31;
  assign sum1_16 = $signed({{5{add_temp_15[48]}}, add_temp_15});

  assign add_signext_32 = product29;
  assign add_signext_33 = product28;
  assign add_temp_16 = add_signext_32 + add_signext_33;
  assign sum1_17 = $signed({{5{add_temp_16[48]}}, add_temp_16});

  assign add_signext_34 = product27;
  assign add_signext_35 = product26;
  assign add_temp_17 = add_signext_34 + add_signext_35;
  assign sum1_18 = $signed({{5{add_temp_17[48]}}, add_temp_17});

  assign add_signext_36 = product25;
  assign add_signext_37 = product24;
  assign add_temp_18 = add_signext_36 + add_signext_37;
  assign sum1_19 = $signed({{5{add_temp_18[48]}}, add_temp_18});

  assign add_signext_38 = product23;
  assign add_signext_39 = product22;
  assign add_temp_19 = add_signext_38 + add_signext_39;
  assign sum1_20 = $signed({{5{add_temp_19[48]}}, add_temp_19});

  assign add_signext_40 = product21;
  assign add_signext_41 = product20;
  assign add_temp_20 = add_signext_40 + add_signext_41;
  assign sum1_21 = $signed({{5{add_temp_20[48]}}, add_temp_20});

  assign add_signext_42 = product19;
  assign add_signext_43 = product18;
  assign add_temp_21 = add_signext_42 + add_signext_43;
  assign sum1_22 = $signed({{5{add_temp_21[48]}}, add_temp_21});

  assign add_signext_44 = product17;
  assign add_signext_45 = product16;
  assign add_temp_22 = add_signext_44 + add_signext_45;
  assign sum1_23 = $signed({{5{add_temp_22[48]}}, add_temp_22});

  assign add_signext_46 = product15;
  assign add_signext_47 = product14;
  assign add_temp_23 = add_signext_46 + add_signext_47;
  assign sum1_24 = $signed({{5{add_temp_23[48]}}, add_temp_23});

  assign add_signext_48 = product13;
  assign add_signext_49 = product12;
  assign add_temp_24 = add_signext_48 + add_signext_49;
  assign sum1_25 = $signed({{5{add_temp_24[48]}}, add_temp_24});

  assign add_signext_50 = product11;
  assign add_signext_51 = product10;
  assign add_temp_25 = add_signext_50 + add_signext_51;
  assign sum1_26 = $signed({{5{add_temp_25[48]}}, add_temp_25});

  assign add_signext_52 = product9;
  assign add_signext_53 = product8;
  assign add_temp_26 = add_signext_52 + add_signext_53;
  assign sum1_27 = $signed({{5{add_temp_26[48]}}, add_temp_26});

  assign add_signext_54 = product7;
  assign add_signext_55 = product6;
  assign add_temp_27 = add_signext_54 + add_signext_55;
  assign sum1_28 = $signed({{5{add_temp_27[48]}}, add_temp_27});

  assign add_signext_56 = product5;
  assign add_signext_57 = product4;
  assign add_temp_28 = add_signext_56 + add_signext_57;
  assign sum1_29 = $signed({{5{add_temp_28[48]}}, add_temp_28});

  assign add_signext_58 = product3;
  assign add_signext_59 = product2;
  assign add_temp_29 = add_signext_58 + add_signext_59;
  assign sum1_30 = $signed({{5{add_temp_29[48]}}, add_temp_29});

  always @ (posedge clk or posedge reset)
    begin: temp_process1
      if (reset == 1'b1) begin
        sumpipe1_1 <= 0;
        sumpipe1_2 <= 0;
        sumpipe1_3 <= 0;
        sumpipe1_4 <= 0;
        sumpipe1_5 <= 0;
        sumpipe1_6 <= 0;
        sumpipe1_7 <= 0;
        sumpipe1_8 <= 0;
        sumpipe1_9 <= 0;
        sumpipe1_10 <= 0;
        sumpipe1_11 <= 0;
        sumpipe1_12 <= 0;
        sumpipe1_13 <= 0;
        sumpipe1_14 <= 0;
        sumpipe1_15 <= 0;
        sumpipe1_16 <= 0;
        sumpipe1_17 <= 0;
        sumpipe1_18 <= 0;
        sumpipe1_19 <= 0;
        sumpipe1_20 <= 0;
        sumpipe1_21 <= 0;
        sumpipe1_22 <= 0;
        sumpipe1_23 <= 0;
        sumpipe1_24 <= 0;
        sumpipe1_25 <= 0;
        sumpipe1_26 <= 0;
        sumpipe1_27 <= 0;
        sumpipe1_28 <= 0;
        sumpipe1_29 <= 0;
        sumpipe1_30 <= 0;
        sumpipe1_31 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe1_1 <= sum1_1;
          sumpipe1_2 <= sum1_2;
          sumpipe1_3 <= sum1_3;
          sumpipe1_4 <= sum1_4;
          sumpipe1_5 <= sum1_5;
          sumpipe1_6 <= sum1_6;
          sumpipe1_7 <= sum1_7;
          sumpipe1_8 <= sum1_8;
          sumpipe1_9 <= sum1_9;
          sumpipe1_10 <= sum1_10;
          sumpipe1_11 <= sum1_11;
          sumpipe1_12 <= sum1_12;
          sumpipe1_13 <= sum1_13;
          sumpipe1_14 <= sum1_14;
          sumpipe1_15 <= sum1_15;
          sumpipe1_16 <= sum1_16;
          sumpipe1_17 <= sum1_17;
          sumpipe1_18 <= sum1_18;
          sumpipe1_19 <= sum1_19;
          sumpipe1_20 <= sum1_20;
          sumpipe1_21 <= sum1_21;
          sumpipe1_22 <= sum1_22;
          sumpipe1_23 <= sum1_23;
          sumpipe1_24 <= sum1_24;
          sumpipe1_25 <= sum1_25;
          sumpipe1_26 <= sum1_26;
          sumpipe1_27 <= sum1_27;
          sumpipe1_28 <= sum1_28;
          sumpipe1_29 <= sum1_29;
          sumpipe1_30 <= sum1_30;
          sumpipe1_31 <= product1;
        end
      end
    end // temp_process1

  assign add_signext_60 = sumpipe1_1;
  assign add_signext_61 = sumpipe1_2;
  assign add_temp_30 = add_signext_60 + add_signext_61;
  assign sum2_1 = add_temp_30[53:0];

  assign add_signext_62 = sumpipe1_3;
  assign add_signext_63 = sumpipe1_4;
  assign add_temp_31 = add_signext_62 + add_signext_63;
  assign sum2_2 = add_temp_31[53:0];

  assign add_signext_64 = sumpipe1_5;
  assign add_signext_65 = sumpipe1_6;
  assign add_temp_32 = add_signext_64 + add_signext_65;
  assign sum2_3 = add_temp_32[53:0];

  assign add_signext_66 = sumpipe1_7;
  assign add_signext_67 = sumpipe1_8;
  assign add_temp_33 = add_signext_66 + add_signext_67;
  assign sum2_4 = add_temp_33[53:0];

  assign add_signext_68 = sumpipe1_9;
  assign add_signext_69 = sumpipe1_10;
  assign add_temp_34 = add_signext_68 + add_signext_69;
  assign sum2_5 = add_temp_34[53:0];

  assign add_signext_70 = sumpipe1_11;
  assign add_signext_71 = sumpipe1_12;
  assign add_temp_35 = add_signext_70 + add_signext_71;
  assign sum2_6 = add_temp_35[53:0];

  assign add_signext_72 = sumpipe1_13;
  assign add_signext_73 = sumpipe1_14;
  assign add_temp_36 = add_signext_72 + add_signext_73;
  assign sum2_7 = add_temp_36[53:0];

  assign add_signext_74 = sumpipe1_15;
  assign add_signext_75 = sumpipe1_16;
  assign add_temp_37 = add_signext_74 + add_signext_75;
  assign sum2_8 = add_temp_37[53:0];

  assign add_signext_76 = sumpipe1_17;
  assign add_signext_77 = sumpipe1_18;
  assign add_temp_38 = add_signext_76 + add_signext_77;
  assign sum2_9 = add_temp_38[53:0];

  assign add_signext_78 = sumpipe1_19;
  assign add_signext_79 = sumpipe1_20;
  assign add_temp_39 = add_signext_78 + add_signext_79;
  assign sum2_10 = add_temp_39[53:0];

  assign add_signext_80 = sumpipe1_21;
  assign add_signext_81 = sumpipe1_22;
  assign add_temp_40 = add_signext_80 + add_signext_81;
  assign sum2_11 = add_temp_40[53:0];

  assign add_signext_82 = sumpipe1_23;
  assign add_signext_83 = sumpipe1_24;
  assign add_temp_41 = add_signext_82 + add_signext_83;
  assign sum2_12 = add_temp_41[53:0];

  assign add_signext_84 = sumpipe1_25;
  assign add_signext_85 = sumpipe1_26;
  assign add_temp_42 = add_signext_84 + add_signext_85;
  assign sum2_13 = add_temp_42[53:0];

  assign add_signext_86 = sumpipe1_27;
  assign add_signext_87 = sumpipe1_28;
  assign add_temp_43 = add_signext_86 + add_signext_87;
  assign sum2_14 = add_temp_43[53:0];

  assign add_signext_88 = sumpipe1_29;
  assign add_signext_89 = sumpipe1_30;
  assign add_temp_44 = add_signext_88 + add_signext_89;
  assign sum2_15 = add_temp_44[53:0];

  always @ (posedge clk or posedge reset)
    begin: temp_process2
      if (reset == 1'b1) begin
        sumpipe2_1 <= 0;
        sumpipe2_2 <= 0;
        sumpipe2_3 <= 0;
        sumpipe2_4 <= 0;
        sumpipe2_5 <= 0;
        sumpipe2_6 <= 0;
        sumpipe2_7 <= 0;
        sumpipe2_8 <= 0;
        sumpipe2_9 <= 0;
        sumpipe2_10 <= 0;
        sumpipe2_11 <= 0;
        sumpipe2_12 <= 0;
        sumpipe2_13 <= 0;
        sumpipe2_14 <= 0;
        sumpipe2_15 <= 0;
        sumpipe2_16 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe2_1 <= sum2_1;
          sumpipe2_2 <= sum2_2;
          sumpipe2_3 <= sum2_3;
          sumpipe2_4 <= sum2_4;
          sumpipe2_5 <= sum2_5;
          sumpipe2_6 <= sum2_6;
          sumpipe2_7 <= sum2_7;
          sumpipe2_8 <= sum2_8;
          sumpipe2_9 <= sum2_9;
          sumpipe2_10 <= sum2_10;
          sumpipe2_11 <= sum2_11;
          sumpipe2_12 <= sum2_12;
          sumpipe2_13 <= sum2_13;
          sumpipe2_14 <= sum2_14;
          sumpipe2_15 <= sum2_15;
          sumpipe2_16 <= sumpipe1_31;
        end
      end
    end // temp_process2

  assign add_signext_90 = sumpipe2_1;
  assign add_signext_91 = sumpipe2_2;
  assign add_temp_45 = add_signext_90 + add_signext_91;
  assign sum3_1 = add_temp_45[53:0];

  assign add_signext_92 = sumpipe2_3;
  assign add_signext_93 = sumpipe2_4;
  assign add_temp_46 = add_signext_92 + add_signext_93;
  assign sum3_2 = add_temp_46[53:0];

  assign add_signext_94 = sumpipe2_5;
  assign add_signext_95 = sumpipe2_6;
  assign add_temp_47 = add_signext_94 + add_signext_95;
  assign sum3_3 = add_temp_47[53:0];

  assign add_signext_96 = sumpipe2_7;
  assign add_signext_97 = sumpipe2_8;
  assign add_temp_48 = add_signext_96 + add_signext_97;
  assign sum3_4 = add_temp_48[53:0];

  assign add_signext_98 = sumpipe2_9;
  assign add_signext_99 = sumpipe2_10;
  assign add_temp_49 = add_signext_98 + add_signext_99;
  assign sum3_5 = add_temp_49[53:0];

  assign add_signext_100 = sumpipe2_11;
  assign add_signext_101 = sumpipe2_12;
  assign add_temp_50 = add_signext_100 + add_signext_101;
  assign sum3_6 = add_temp_50[53:0];

  assign add_signext_102 = sumpipe2_13;
  assign add_signext_103 = sumpipe2_14;
  assign add_temp_51 = add_signext_102 + add_signext_103;
  assign sum3_7 = add_temp_51[53:0];

  assign add_signext_104 = sumpipe2_15;
  assign add_signext_105 = $signed({{6{sumpipe2_16[47]}}, sumpipe2_16});
  assign add_temp_52 = add_signext_104 + add_signext_105;
  assign sum3_8 = add_temp_52[53:0];

  always @ (posedge clk or posedge reset)
    begin: temp_process3
      if (reset == 1'b1) begin
        sumpipe3_1 <= 0;
        sumpipe3_2 <= 0;
        sumpipe3_3 <= 0;
        sumpipe3_4 <= 0;
        sumpipe3_5 <= 0;
        sumpipe3_6 <= 0;
        sumpipe3_7 <= 0;
        sumpipe3_8 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe3_1 <= sum3_1;
          sumpipe3_2 <= sum3_2;
          sumpipe3_3 <= sum3_3;
          sumpipe3_4 <= sum3_4;
          sumpipe3_5 <= sum3_5;
          sumpipe3_6 <= sum3_6;
          sumpipe3_7 <= sum3_7;
          sumpipe3_8 <= sum3_8;
        end
      end
    end // temp_process3

  assign add_signext_106 = sumpipe3_1;
  assign add_signext_107 = sumpipe3_2;
  assign add_temp_53 = add_signext_106 + add_signext_107;
  assign sum4_1 = add_temp_53[53:0];

  assign add_signext_108 = sumpipe3_3;
  assign add_signext_109 = sumpipe3_4;
  assign add_temp_54 = add_signext_108 + add_signext_109;
  assign sum4_2 = add_temp_54[53:0];

  assign add_signext_110 = sumpipe3_5;
  assign add_signext_111 = sumpipe3_6;
  assign add_temp_55 = add_signext_110 + add_signext_111;
  assign sum4_3 = add_temp_55[53:0];

  assign add_signext_112 = sumpipe3_7;
  assign add_signext_113 = sumpipe3_8;
  assign add_temp_56 = add_signext_112 + add_signext_113;
  assign sum4_4 = add_temp_56[53:0];

  always @ (posedge clk or posedge reset)
    begin: temp_process4
      if (reset == 1'b1) begin
        sumpipe4_1 <= 0;
        sumpipe4_2 <= 0;
        sumpipe4_3 <= 0;
        sumpipe4_4 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe4_1 <= sum4_1;
          sumpipe4_2 <= sum4_2;
          sumpipe4_3 <= sum4_3;
          sumpipe4_4 <= sum4_4;
        end
      end
    end // temp_process4

  assign add_signext_114 = sumpipe4_1;
  assign add_signext_115 = sumpipe4_2;
  assign add_temp_57 = add_signext_114 + add_signext_115;
  assign sum5_1 = add_temp_57[53:0];

  assign add_signext_116 = sumpipe4_3;
  assign add_signext_117 = sumpipe4_4;
  assign add_temp_58 = add_signext_116 + add_signext_117;
  assign sum5_2 = add_temp_58[53:0];

  always @ (posedge clk or posedge reset)
    begin: temp_process5
      if (reset == 1'b1) begin
        sumpipe5_1 <= 0;
        sumpipe5_2 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe5_1 <= sum5_1;
          sumpipe5_2 <= sum5_2;
        end
      end
    end // temp_process5

  assign add_signext_118 = sumpipe5_1;
  assign add_signext_119 = sumpipe5_2;
  assign add_temp_59 = add_signext_118 + add_signext_119;
  assign sum6_1 = add_temp_59[53:0];

  always @ (posedge clk or posedge reset)
    begin: temp_process6
      if (reset == 1'b1) begin
        sumpipe6_1 <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          sumpipe6_1 <= sum6_1;
        end
      end
    end // temp_process6

  assign sum_final = sumpipe6_1;

  always @ (posedge clk or posedge reset)
    begin: Output_Register_process
      if (reset == 1'b1) begin
        output_register <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          output_register <= sum_final;
        end
      end
    end // Output_Register_process

  // Assignment Statements
  assign filter_out = output_register;
endmodule  // fir_min_24b_fcsd
