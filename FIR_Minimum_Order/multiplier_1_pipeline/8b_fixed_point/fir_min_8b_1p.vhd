-- -------------------------------------------------------------
--
-- Module: fir_min_8b_1p
-- Generated by MATLAB(R) 9.12 and Filter Design HDL Coder 3.1.11.
-- Generated on: 2023-06-19 20:43:54
-- -------------------------------------------------------------

-- -------------------------------------------------------------
-- HDL Code Generation Options:
--
-- TargetLanguage: VHDL
-- FIRAdderStyle: tree
-- MultiplierInputPipeline: 1
-- MultiplierOutputPipeline: 1
-- OptimizeForHDL: on
-- TargetDirectory: W:\Nikos\UTh\Σχεδίαση Επεξεργαστών\Project\FIR_Minimum_Order\multiplier_1_pipeline\8b_fixed_point
-- AddPipelineRegisters: on
-- Name: fir_min_8b_1p
-- InputDataType: numerictype(1,8,0)
-- TestBenchName: fir_min_8b_1p_tb
-- TestBenchStimulus: impulse step ramp chirp noise 

-- Filter Specifications:
--
-- Sample Rate     : 46 kHz
-- Response        : Lowpass
-- Specification   : Fp,Fst,Ap,Ast
-- Stopband Atten. : 60 dB
-- Passband Edge   : 8 kHz
-- Stopband Edge   : 9.6 kHz
-- Passband Ripple : 1 dB
-- -------------------------------------------------------------

-- -------------------------------------------------------------
-- HDL Implementation    : Fully parallel
-- Folding Factor        : 1
-- -------------------------------------------------------------
-- Filter Settings:
--
-- Discrete-Time FIR Filter (real)
-- -------------------------------
-- Filter Structure  : Direct-Form FIR
-- Filter Length     : 61
-- Stable            : Yes
-- Linear Phase      : Yes (Type 1)
-- Arithmetic        : fixed
-- Numerator         : s8,8 -> [-5.000000e-01 5.000000e-01)
-- -------------------------------------------------------------



LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
USE IEEE.numeric_std.ALL;

ENTITY fir_min_8b_1p IS
   PORT( clk                             :   IN    std_logic; 
         clk_enable                      :   IN    std_logic; 
         reset                           :   IN    std_logic; 
         filter_in                       :   IN    std_logic_vector(7 DOWNTO 0); -- sfix8
         filter_out                      :   OUT   std_logic_vector(21 DOWNTO 0)  -- sfix22_En8
         );

END fir_min_8b_1p;


----------------------------------------------------------------
--Module Architecture: fir_min_8b_1p
----------------------------------------------------------------
ARCHITECTURE rtl OF fir_min_8b_1p IS
  -- Local Functions
  -- Type Definitions
  TYPE delay_pipeline_type IS ARRAY (NATURAL range <>) OF signed(7 DOWNTO 0); -- sfix8
  -- Constants
  CONSTANT coeff1                         : signed(7 DOWNTO 0) := to_signed(0, 8); -- sfix8_En8
  CONSTANT coeff2                         : signed(7 DOWNTO 0) := to_signed(0, 8); -- sfix8_En8
  CONSTANT coeff3                         : signed(7 DOWNTO 0) := to_signed(-1, 8); -- sfix8_En8
  CONSTANT coeff4                         : signed(7 DOWNTO 0) := to_signed(-2, 8); -- sfix8_En8
  CONSTANT coeff5                         : signed(7 DOWNTO 0) := to_signed(-3, 8); -- sfix8_En8
  CONSTANT coeff6                         : signed(7 DOWNTO 0) := to_signed(-2, 8); -- sfix8_En8
  CONSTANT coeff7                         : signed(7 DOWNTO 0) := to_signed(0, 8); -- sfix8_En8
  CONSTANT coeff8                         : signed(7 DOWNTO 0) := to_signed(2, 8); -- sfix8_En8
  CONSTANT coeff9                         : signed(7 DOWNTO 0) := to_signed(1, 8); -- sfix8_En8
  CONSTANT coeff10                        : signed(7 DOWNTO 0) := to_signed(-1, 8); -- sfix8_En8
  CONSTANT coeff11                        : signed(7 DOWNTO 0) := to_signed(-2, 8); -- sfix8_En8
  CONSTANT coeff12                        : signed(7 DOWNTO 0) := to_signed(-1, 8); -- sfix8_En8
  CONSTANT coeff13                        : signed(7 DOWNTO 0) := to_signed(3, 8); -- sfix8_En8
  CONSTANT coeff14                        : signed(7 DOWNTO 0) := to_signed(3, 8); -- sfix8_En8
  CONSTANT coeff15                        : signed(7 DOWNTO 0) := to_signed(-1, 8); -- sfix8_En8
  CONSTANT coeff16                        : signed(7 DOWNTO 0) := to_signed(-4, 8); -- sfix8_En8
  CONSTANT coeff17                        : signed(7 DOWNTO 0) := to_signed(-3, 8); -- sfix8_En8
  CONSTANT coeff18                        : signed(7 DOWNTO 0) := to_signed(3, 8); -- sfix8_En8
  CONSTANT coeff19                        : signed(7 DOWNTO 0) := to_signed(6, 8); -- sfix8_En8
  CONSTANT coeff20                        : signed(7 DOWNTO 0) := to_signed(2, 8); -- sfix8_En8
  CONSTANT coeff21                        : signed(7 DOWNTO 0) := to_signed(-6, 8); -- sfix8_En8
  CONSTANT coeff22                        : signed(7 DOWNTO 0) := to_signed(-7, 8); -- sfix8_En8
  CONSTANT coeff23                        : signed(7 DOWNTO 0) := to_signed(1, 8); -- sfix8_En8
  CONSTANT coeff24                        : signed(7 DOWNTO 0) := to_signed(10, 8); -- sfix8_En8
  CONSTANT coeff25                        : signed(7 DOWNTO 0) := to_signed(9, 8); -- sfix8_En8
  CONSTANT coeff26                        : signed(7 DOWNTO 0) := to_signed(-7, 8); -- sfix8_En8
  CONSTANT coeff27                        : signed(7 DOWNTO 0) := to_signed(-20, 8); -- sfix8_En8
  CONSTANT coeff28                        : signed(7 DOWNTO 0) := to_signed(-10, 8); -- sfix8_En8
  CONSTANT coeff29                        : signed(7 DOWNTO 0) := to_signed(29, 8); -- sfix8_En8
  CONSTANT coeff30                        : signed(7 DOWNTO 0) := to_signed(75, 8); -- sfix8_En8
  CONSTANT coeff31                        : signed(7 DOWNTO 0) := to_signed(95, 8); -- sfix8_En8
  CONSTANT coeff32                        : signed(7 DOWNTO 0) := to_signed(75, 8); -- sfix8_En8
  CONSTANT coeff33                        : signed(7 DOWNTO 0) := to_signed(29, 8); -- sfix8_En8
  CONSTANT coeff34                        : signed(7 DOWNTO 0) := to_signed(-10, 8); -- sfix8_En8
  CONSTANT coeff35                        : signed(7 DOWNTO 0) := to_signed(-20, 8); -- sfix8_En8
  CONSTANT coeff36                        : signed(7 DOWNTO 0) := to_signed(-7, 8); -- sfix8_En8
  CONSTANT coeff37                        : signed(7 DOWNTO 0) := to_signed(9, 8); -- sfix8_En8
  CONSTANT coeff38                        : signed(7 DOWNTO 0) := to_signed(10, 8); -- sfix8_En8
  CONSTANT coeff39                        : signed(7 DOWNTO 0) := to_signed(1, 8); -- sfix8_En8
  CONSTANT coeff40                        : signed(7 DOWNTO 0) := to_signed(-7, 8); -- sfix8_En8
  CONSTANT coeff41                        : signed(7 DOWNTO 0) := to_signed(-6, 8); -- sfix8_En8
  CONSTANT coeff42                        : signed(7 DOWNTO 0) := to_signed(2, 8); -- sfix8_En8
  CONSTANT coeff43                        : signed(7 DOWNTO 0) := to_signed(6, 8); -- sfix8_En8
  CONSTANT coeff44                        : signed(7 DOWNTO 0) := to_signed(3, 8); -- sfix8_En8
  CONSTANT coeff45                        : signed(7 DOWNTO 0) := to_signed(-3, 8); -- sfix8_En8
  CONSTANT coeff46                        : signed(7 DOWNTO 0) := to_signed(-4, 8); -- sfix8_En8
  CONSTANT coeff47                        : signed(7 DOWNTO 0) := to_signed(-1, 8); -- sfix8_En8
  CONSTANT coeff48                        : signed(7 DOWNTO 0) := to_signed(3, 8); -- sfix8_En8
  CONSTANT coeff49                        : signed(7 DOWNTO 0) := to_signed(3, 8); -- sfix8_En8
  CONSTANT coeff50                        : signed(7 DOWNTO 0) := to_signed(-1, 8); -- sfix8_En8
  CONSTANT coeff51                        : signed(7 DOWNTO 0) := to_signed(-2, 8); -- sfix8_En8
  CONSTANT coeff52                        : signed(7 DOWNTO 0) := to_signed(-1, 8); -- sfix8_En8
  CONSTANT coeff53                        : signed(7 DOWNTO 0) := to_signed(1, 8); -- sfix8_En8
  CONSTANT coeff54                        : signed(7 DOWNTO 0) := to_signed(2, 8); -- sfix8_En8
  CONSTANT coeff55                        : signed(7 DOWNTO 0) := to_signed(0, 8); -- sfix8_En8
  CONSTANT coeff56                        : signed(7 DOWNTO 0) := to_signed(-2, 8); -- sfix8_En8
  CONSTANT coeff57                        : signed(7 DOWNTO 0) := to_signed(-3, 8); -- sfix8_En8
  CONSTANT coeff58                        : signed(7 DOWNTO 0) := to_signed(-2, 8); -- sfix8_En8
  CONSTANT coeff59                        : signed(7 DOWNTO 0) := to_signed(-1, 8); -- sfix8_En8
  CONSTANT coeff60                        : signed(7 DOWNTO 0) := to_signed(0, 8); -- sfix8_En8
  CONSTANT coeff61                        : signed(7 DOWNTO 0) := to_signed(0, 8); -- sfix8_En8

  -- Signals
  SIGNAL delay_pipeline                   : delay_pipeline_type(0 TO 60); -- sfix8
  SIGNAL product59                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_58_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product59_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp                     : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product58                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_57_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product58_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_1                   : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product57                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_56_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff57_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product57_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product56                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_55_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product56_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_2                   : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product54                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_53_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product54_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product53                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_52_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product53_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product52                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_51_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product52_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_3                   : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product51                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_50_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product51_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_4                   : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product50                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_49_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product50_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_5                   : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product49                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_48_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff49_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product49_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product48                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_47_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff48_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product48_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product47                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_46_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product47_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_6                   : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product46                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_45_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product46_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_7                   : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product45                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_44_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff45_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product45_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product44                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_43_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff44_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product44_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product43                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_42_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff43_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product43_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product42                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_41_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product42_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product41                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_40_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff41_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product41_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product40                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_39_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff40_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product40_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product39                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_38_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product39_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product38                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_37_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff38_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product38_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product37                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_36_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff37_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product37_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product36                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_35_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff36_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product36_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product35                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_34_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff35_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product35_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product34                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_33_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff34_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product34_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product33                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_32_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff33_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product33_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product32                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_31_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff32_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product32_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product31                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_30_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff31_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product31_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product30                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_29_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff30_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product30_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product29                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_28_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff29_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product29_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product28                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_27_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff28_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product28_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product27                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_26_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff27_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product27_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product26                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_25_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff26_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product26_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product25                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_24_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff25_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product25_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product24                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_23_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff24_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product24_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product23                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_22_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product23_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product22                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_21_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff22_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product22_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product21                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_20_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff21_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product21_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product20                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_19_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product20_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product19                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_18_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff19_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product19_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product18                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_17_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff18_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product18_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product17                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_16_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff17_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product17_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product16                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_15_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product16_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_8                   : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product15                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_14_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product15_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_9                   : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product14                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_13_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff14_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product14_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product13                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_12_under_pipe     : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff13_pipe                     : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product13_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product12                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_11_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product12_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_10                  : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product11                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_10_pipe           : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product11_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_11                  : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product10                        : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_9_pipe            : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product10_pipe                   : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_12                  : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product9                         : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_8_pipe            : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product9_pipe                    : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product8                         : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_7_pipe            : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product8_pipe                    : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product6                         : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_5_pipe            : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product6_pipe                    : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_13                  : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product5                         : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_4_under_pipe      : signed(7 DOWNTO 0); -- sfix8
  SIGNAL coeff5_pipe                      : signed(7 DOWNTO 0); -- sfix8_En8
  SIGNAL product5_pipe                    : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL product4                         : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_3_pipe            : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product4_pipe                    : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_14                  : signed(8 DOWNTO 0); -- sfix9
  SIGNAL product3                         : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL delay_pipeline_2_pipe            : signed(7 DOWNTO 0); -- sfix8
  SIGNAL product3_pipe                    : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL mulpwr2_temp_15                  : signed(8 DOWNTO 0); -- sfix9
  SIGNAL sum_final                        : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_1                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp                         : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_1                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_2                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_1                       : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_2                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_3                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_2                       : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_3                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_4                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_3                       : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_4                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_5                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_4                       : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_5                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_6                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_5                       : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_6                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_7                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_6                       : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_7                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_8                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_7                       : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_8                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_9                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_8                       : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_9                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_10                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_9                       : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_10                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_11                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_10                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_11                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_12                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_11                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_12                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_13                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_12                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_13                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_14                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_13                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_14                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_15                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_14                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_15                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_16                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_15                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_16                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_17                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_16                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_17                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_18                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_17                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_18                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_19                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_18                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_19                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_20                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_19                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_20                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_21                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_20                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_21                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_22                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_21                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_22                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_23                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_22                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_23                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_24                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_23                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_24                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_25                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_24                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_25                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_26                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_25                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_26                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum1_27                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_26                      : signed(16 DOWNTO 0); -- sfix17_En8
  SIGNAL sumpipe1_27                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sumpipe1_28                      : signed(15 DOWNTO 0); -- sfix16_En8
  SIGNAL sum2_1                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_27                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_1                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_2                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_28                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_2                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_3                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_29                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_3                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_4                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_30                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_4                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_5                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_31                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_5                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_6                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_32                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_6                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_7                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_33                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_7                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_8                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_34                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_8                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_9                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_35                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_9                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_10                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_36                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_10                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_11                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_37                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_11                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_12                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_38                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_12                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_13                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_39                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_13                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum2_14                          : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_40                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe2_14                      : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum3_1                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_41                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe3_1                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum3_2                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_42                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe3_2                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum3_3                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_43                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe3_3                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum3_4                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_44                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe3_4                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum3_5                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_45                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe3_5                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum3_6                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_46                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe3_6                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum3_7                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_47                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe3_7                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum4_1                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_48                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe4_1                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum4_2                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_49                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe4_2                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum4_3                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_50                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe4_3                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sumpipe4_4                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum5_1                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_51                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe5_1                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum5_2                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_52                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe5_2                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL sum6_1                           : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL add_temp_53                      : signed(22 DOWNTO 0); -- sfix23_En8
  SIGNAL sumpipe6_1                       : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL output_typeconvert               : signed(21 DOWNTO 0); -- sfix22_En8
  SIGNAL output_register                  : signed(21 DOWNTO 0); -- sfix22_En8


BEGIN

  -- Block Statements
  Delay_Pipeline_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline(0 TO 60) <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline(0) <= signed(filter_in);
        delay_pipeline(1 TO 60) <= delay_pipeline(0 TO 59);
      END IF;
    END IF; 
  END PROCESS Delay_Pipeline_process;

  temp_process1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_58_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_58_pipe <= delay_pipeline(58);
      END IF;
    END IF;
  END PROCESS temp_process1;
  temp_process2 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product59 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product59 <= product59_pipe;
      END IF;
    END IF;
  END PROCESS temp_process2;
  mulpwr2_temp <= ('0' & delay_pipeline_58_pipe) WHEN delay_pipeline_58_pipe = "10000000"
      ELSE -resize(delay_pipeline_58_pipe,9);

  product59_pipe <= resize(mulpwr2_temp, 16);

  temp_process3 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_57_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_57_pipe <= delay_pipeline(57);
      END IF;
    END IF;
  END PROCESS temp_process3;
  temp_process4 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product58 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product58 <= product58_pipe;
      END IF;
    END IF;
  END PROCESS temp_process4;
  mulpwr2_temp_1 <= ('0' & delay_pipeline_57_pipe) WHEN delay_pipeline_57_pipe = "10000000"
      ELSE -resize(delay_pipeline_57_pipe,9);

  product58_pipe <= resize(mulpwr2_temp_1(8 DOWNTO 0) & '0', 16);

  temp_process5 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_56_under_pipe <= (OTHERS => '0');
      coeff57_pipe <= (OTHERS => '0');
      product57_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_56_under_pipe <= delay_pipeline(56);
        coeff57_pipe <= coeff57;

        product57_pipe <= delay_pipeline_56_under_pipe * coeff57_pipe;

      END IF;
    END IF;
  END PROCESS temp_process5;

  product57 <= product57_pipe;

  temp_process6 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_55_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_55_pipe <= delay_pipeline(55);
      END IF;
    END IF;
  END PROCESS temp_process6;
  temp_process7 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product56 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product56 <= product56_pipe;
      END IF;
    END IF;
  END PROCESS temp_process7;
  mulpwr2_temp_2 <= ('0' & delay_pipeline_55_pipe) WHEN delay_pipeline_55_pipe = "10000000"
      ELSE -resize(delay_pipeline_55_pipe,9);

  product56_pipe <= resize(mulpwr2_temp_2(8 DOWNTO 0) & '0', 16);

  temp_process8 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_53_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_53_pipe <= delay_pipeline(53);
      END IF;
    END IF;
  END PROCESS temp_process8;
  temp_process9 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product54 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product54 <= product54_pipe;
      END IF;
    END IF;
  END PROCESS temp_process9;
  product54_pipe <= resize(delay_pipeline_53_pipe(7 DOWNTO 0) & '0', 16);

  temp_process10 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_52_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_52_pipe <= delay_pipeline(52);
      END IF;
    END IF;
  END PROCESS temp_process10;
  temp_process11 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product53 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product53 <= product53_pipe;
      END IF;
    END IF;
  END PROCESS temp_process11;
  product53_pipe <= resize(delay_pipeline_52_pipe, 16);

  temp_process12 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_51_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_51_pipe <= delay_pipeline(51);
      END IF;
    END IF;
  END PROCESS temp_process12;
  temp_process13 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product52 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product52 <= product52_pipe;
      END IF;
    END IF;
  END PROCESS temp_process13;
  mulpwr2_temp_3 <= ('0' & delay_pipeline_51_pipe) WHEN delay_pipeline_51_pipe = "10000000"
      ELSE -resize(delay_pipeline_51_pipe,9);

  product52_pipe <= resize(mulpwr2_temp_3, 16);

  temp_process14 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_50_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_50_pipe <= delay_pipeline(50);
      END IF;
    END IF;
  END PROCESS temp_process14;
  temp_process15 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product51 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product51 <= product51_pipe;
      END IF;
    END IF;
  END PROCESS temp_process15;
  mulpwr2_temp_4 <= ('0' & delay_pipeline_50_pipe) WHEN delay_pipeline_50_pipe = "10000000"
      ELSE -resize(delay_pipeline_50_pipe,9);

  product51_pipe <= resize(mulpwr2_temp_4(8 DOWNTO 0) & '0', 16);

  temp_process16 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_49_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_49_pipe <= delay_pipeline(49);
      END IF;
    END IF;
  END PROCESS temp_process16;
  temp_process17 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product50 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product50 <= product50_pipe;
      END IF;
    END IF;
  END PROCESS temp_process17;
  mulpwr2_temp_5 <= ('0' & delay_pipeline_49_pipe) WHEN delay_pipeline_49_pipe = "10000000"
      ELSE -resize(delay_pipeline_49_pipe,9);

  product50_pipe <= resize(mulpwr2_temp_5, 16);

  temp_process18 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_48_under_pipe <= (OTHERS => '0');
      coeff49_pipe <= (OTHERS => '0');
      product49_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_48_under_pipe <= delay_pipeline(48);
        coeff49_pipe <= coeff49;

        product49_pipe <= delay_pipeline_48_under_pipe * coeff49_pipe;

      END IF;
    END IF;
  END PROCESS temp_process18;

  product49 <= product49_pipe;

  temp_process19 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_47_under_pipe <= (OTHERS => '0');
      coeff48_pipe <= (OTHERS => '0');
      product48_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_47_under_pipe <= delay_pipeline(47);
        coeff48_pipe <= coeff48;

        product48_pipe <= delay_pipeline_47_under_pipe * coeff48_pipe;

      END IF;
    END IF;
  END PROCESS temp_process19;

  product48 <= product48_pipe;

  temp_process20 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_46_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_46_pipe <= delay_pipeline(46);
      END IF;
    END IF;
  END PROCESS temp_process20;
  temp_process21 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product47 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product47 <= product47_pipe;
      END IF;
    END IF;
  END PROCESS temp_process21;
  mulpwr2_temp_6 <= ('0' & delay_pipeline_46_pipe) WHEN delay_pipeline_46_pipe = "10000000"
      ELSE -resize(delay_pipeline_46_pipe,9);

  product47_pipe <= resize(mulpwr2_temp_6, 16);

  temp_process22 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_45_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_45_pipe <= delay_pipeline(45);
      END IF;
    END IF;
  END PROCESS temp_process22;
  temp_process23 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product46 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product46 <= product46_pipe;
      END IF;
    END IF;
  END PROCESS temp_process23;
  mulpwr2_temp_7 <= ('0' & delay_pipeline_45_pipe) WHEN delay_pipeline_45_pipe = "10000000"
      ELSE -resize(delay_pipeline_45_pipe,9);

  product46_pipe <= resize(mulpwr2_temp_7(8 DOWNTO 0) & '0' & '0', 16);

  temp_process24 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_44_under_pipe <= (OTHERS => '0');
      coeff45_pipe <= (OTHERS => '0');
      product45_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_44_under_pipe <= delay_pipeline(44);
        coeff45_pipe <= coeff45;

        product45_pipe <= delay_pipeline_44_under_pipe * coeff45_pipe;

      END IF;
    END IF;
  END PROCESS temp_process24;

  product45 <= product45_pipe;

  temp_process25 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_43_under_pipe <= (OTHERS => '0');
      coeff44_pipe <= (OTHERS => '0');
      product44_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_43_under_pipe <= delay_pipeline(43);
        coeff44_pipe <= coeff44;

        product44_pipe <= delay_pipeline_43_under_pipe * coeff44_pipe;

      END IF;
    END IF;
  END PROCESS temp_process25;

  product44 <= product44_pipe;

  temp_process26 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_42_under_pipe <= (OTHERS => '0');
      coeff43_pipe <= (OTHERS => '0');
      product43_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_42_under_pipe <= delay_pipeline(42);
        coeff43_pipe <= coeff43;

        product43_pipe <= delay_pipeline_42_under_pipe * coeff43_pipe;

      END IF;
    END IF;
  END PROCESS temp_process26;

  product43 <= product43_pipe;

  temp_process27 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_41_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_41_pipe <= delay_pipeline(41);
      END IF;
    END IF;
  END PROCESS temp_process27;
  temp_process28 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product42 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product42 <= product42_pipe;
      END IF;
    END IF;
  END PROCESS temp_process28;
  product42_pipe <= resize(delay_pipeline_41_pipe(7 DOWNTO 0) & '0', 16);

  temp_process29 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_40_under_pipe <= (OTHERS => '0');
      coeff41_pipe <= (OTHERS => '0');
      product41_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_40_under_pipe <= delay_pipeline(40);
        coeff41_pipe <= coeff41;

        product41_pipe <= delay_pipeline_40_under_pipe * coeff41_pipe;

      END IF;
    END IF;
  END PROCESS temp_process29;

  product41 <= product41_pipe;

  temp_process30 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_39_under_pipe <= (OTHERS => '0');
      coeff40_pipe <= (OTHERS => '0');
      product40_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_39_under_pipe <= delay_pipeline(39);
        coeff40_pipe <= coeff40;

        product40_pipe <= delay_pipeline_39_under_pipe * coeff40_pipe;

      END IF;
    END IF;
  END PROCESS temp_process30;

  product40 <= product40_pipe;

  temp_process31 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_38_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_38_pipe <= delay_pipeline(38);
      END IF;
    END IF;
  END PROCESS temp_process31;
  temp_process32 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product39 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product39 <= product39_pipe;
      END IF;
    END IF;
  END PROCESS temp_process32;
  product39_pipe <= resize(delay_pipeline_38_pipe, 16);

  temp_process33 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_37_under_pipe <= (OTHERS => '0');
      coeff38_pipe <= (OTHERS => '0');
      product38_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_37_under_pipe <= delay_pipeline(37);
        coeff38_pipe <= coeff38;

        product38_pipe <= delay_pipeline_37_under_pipe * coeff38_pipe;

      END IF;
    END IF;
  END PROCESS temp_process33;

  product38 <= product38_pipe;

  temp_process34 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_36_under_pipe <= (OTHERS => '0');
      coeff37_pipe <= (OTHERS => '0');
      product37_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_36_under_pipe <= delay_pipeline(36);
        coeff37_pipe <= coeff37;

        product37_pipe <= delay_pipeline_36_under_pipe * coeff37_pipe;

      END IF;
    END IF;
  END PROCESS temp_process34;

  product37 <= product37_pipe;

  temp_process35 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_35_under_pipe <= (OTHERS => '0');
      coeff36_pipe <= (OTHERS => '0');
      product36_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_35_under_pipe <= delay_pipeline(35);
        coeff36_pipe <= coeff36;

        product36_pipe <= delay_pipeline_35_under_pipe * coeff36_pipe;

      END IF;
    END IF;
  END PROCESS temp_process35;

  product36 <= product36_pipe;

  temp_process36 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_34_under_pipe <= (OTHERS => '0');
      coeff35_pipe <= (OTHERS => '0');
      product35_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_34_under_pipe <= delay_pipeline(34);
        coeff35_pipe <= coeff35;

        product35_pipe <= delay_pipeline_34_under_pipe * coeff35_pipe;

      END IF;
    END IF;
  END PROCESS temp_process36;

  product35 <= product35_pipe;

  temp_process37 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_33_under_pipe <= (OTHERS => '0');
      coeff34_pipe <= (OTHERS => '0');
      product34_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_33_under_pipe <= delay_pipeline(33);
        coeff34_pipe <= coeff34;

        product34_pipe <= delay_pipeline_33_under_pipe * coeff34_pipe;

      END IF;
    END IF;
  END PROCESS temp_process37;

  product34 <= product34_pipe;

  temp_process38 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_32_under_pipe <= (OTHERS => '0');
      coeff33_pipe <= (OTHERS => '0');
      product33_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_32_under_pipe <= delay_pipeline(32);
        coeff33_pipe <= coeff33;

        product33_pipe <= delay_pipeline_32_under_pipe * coeff33_pipe;

      END IF;
    END IF;
  END PROCESS temp_process38;

  product33 <= product33_pipe;

  temp_process39 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_31_under_pipe <= (OTHERS => '0');
      coeff32_pipe <= (OTHERS => '0');
      product32_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_31_under_pipe <= delay_pipeline(31);
        coeff32_pipe <= coeff32;

        product32_pipe <= delay_pipeline_31_under_pipe * coeff32_pipe;

      END IF;
    END IF;
  END PROCESS temp_process39;

  product32 <= product32_pipe;

  temp_process40 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_30_under_pipe <= (OTHERS => '0');
      coeff31_pipe <= (OTHERS => '0');
      product31_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_30_under_pipe <= delay_pipeline(30);
        coeff31_pipe <= coeff31;

        product31_pipe <= delay_pipeline_30_under_pipe * coeff31_pipe;

      END IF;
    END IF;
  END PROCESS temp_process40;

  product31 <= product31_pipe;

  temp_process41 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_29_under_pipe <= (OTHERS => '0');
      coeff30_pipe <= (OTHERS => '0');
      product30_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_29_under_pipe <= delay_pipeline(29);
        coeff30_pipe <= coeff30;

        product30_pipe <= delay_pipeline_29_under_pipe * coeff30_pipe;

      END IF;
    END IF;
  END PROCESS temp_process41;

  product30 <= product30_pipe;

  temp_process42 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_28_under_pipe <= (OTHERS => '0');
      coeff29_pipe <= (OTHERS => '0');
      product29_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_28_under_pipe <= delay_pipeline(28);
        coeff29_pipe <= coeff29;

        product29_pipe <= delay_pipeline_28_under_pipe * coeff29_pipe;

      END IF;
    END IF;
  END PROCESS temp_process42;

  product29 <= product29_pipe;

  temp_process43 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_27_under_pipe <= (OTHERS => '0');
      coeff28_pipe <= (OTHERS => '0');
      product28_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_27_under_pipe <= delay_pipeline(27);
        coeff28_pipe <= coeff28;

        product28_pipe <= delay_pipeline_27_under_pipe * coeff28_pipe;

      END IF;
    END IF;
  END PROCESS temp_process43;

  product28 <= product28_pipe;

  temp_process44 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_26_under_pipe <= (OTHERS => '0');
      coeff27_pipe <= (OTHERS => '0');
      product27_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_26_under_pipe <= delay_pipeline(26);
        coeff27_pipe <= coeff27;

        product27_pipe <= delay_pipeline_26_under_pipe * coeff27_pipe;

      END IF;
    END IF;
  END PROCESS temp_process44;

  product27 <= product27_pipe;

  temp_process45 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_25_under_pipe <= (OTHERS => '0');
      coeff26_pipe <= (OTHERS => '0');
      product26_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_25_under_pipe <= delay_pipeline(25);
        coeff26_pipe <= coeff26;

        product26_pipe <= delay_pipeline_25_under_pipe * coeff26_pipe;

      END IF;
    END IF;
  END PROCESS temp_process45;

  product26 <= product26_pipe;

  temp_process46 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_24_under_pipe <= (OTHERS => '0');
      coeff25_pipe <= (OTHERS => '0');
      product25_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_24_under_pipe <= delay_pipeline(24);
        coeff25_pipe <= coeff25;

        product25_pipe <= delay_pipeline_24_under_pipe * coeff25_pipe;

      END IF;
    END IF;
  END PROCESS temp_process46;

  product25 <= product25_pipe;

  temp_process47 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_23_under_pipe <= (OTHERS => '0');
      coeff24_pipe <= (OTHERS => '0');
      product24_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_23_under_pipe <= delay_pipeline(23);
        coeff24_pipe <= coeff24;

        product24_pipe <= delay_pipeline_23_under_pipe * coeff24_pipe;

      END IF;
    END IF;
  END PROCESS temp_process47;

  product24 <= product24_pipe;

  temp_process48 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_22_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_22_pipe <= delay_pipeline(22);
      END IF;
    END IF;
  END PROCESS temp_process48;
  temp_process49 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product23 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product23 <= product23_pipe;
      END IF;
    END IF;
  END PROCESS temp_process49;
  product23_pipe <= resize(delay_pipeline_22_pipe, 16);

  temp_process50 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_21_under_pipe <= (OTHERS => '0');
      coeff22_pipe <= (OTHERS => '0');
      product22_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_21_under_pipe <= delay_pipeline(21);
        coeff22_pipe <= coeff22;

        product22_pipe <= delay_pipeline_21_under_pipe * coeff22_pipe;

      END IF;
    END IF;
  END PROCESS temp_process50;

  product22 <= product22_pipe;

  temp_process51 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_20_under_pipe <= (OTHERS => '0');
      coeff21_pipe <= (OTHERS => '0');
      product21_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_20_under_pipe <= delay_pipeline(20);
        coeff21_pipe <= coeff21;

        product21_pipe <= delay_pipeline_20_under_pipe * coeff21_pipe;

      END IF;
    END IF;
  END PROCESS temp_process51;

  product21 <= product21_pipe;

  temp_process52 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_19_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_19_pipe <= delay_pipeline(19);
      END IF;
    END IF;
  END PROCESS temp_process52;
  temp_process53 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product20 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product20 <= product20_pipe;
      END IF;
    END IF;
  END PROCESS temp_process53;
  product20_pipe <= resize(delay_pipeline_19_pipe(7 DOWNTO 0) & '0', 16);

  temp_process54 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_18_under_pipe <= (OTHERS => '0');
      coeff19_pipe <= (OTHERS => '0');
      product19_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_18_under_pipe <= delay_pipeline(18);
        coeff19_pipe <= coeff19;

        product19_pipe <= delay_pipeline_18_under_pipe * coeff19_pipe;

      END IF;
    END IF;
  END PROCESS temp_process54;

  product19 <= product19_pipe;

  temp_process55 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_17_under_pipe <= (OTHERS => '0');
      coeff18_pipe <= (OTHERS => '0');
      product18_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_17_under_pipe <= delay_pipeline(17);
        coeff18_pipe <= coeff18;

        product18_pipe <= delay_pipeline_17_under_pipe * coeff18_pipe;

      END IF;
    END IF;
  END PROCESS temp_process55;

  product18 <= product18_pipe;

  temp_process56 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_16_under_pipe <= (OTHERS => '0');
      coeff17_pipe <= (OTHERS => '0');
      product17_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_16_under_pipe <= delay_pipeline(16);
        coeff17_pipe <= coeff17;

        product17_pipe <= delay_pipeline_16_under_pipe * coeff17_pipe;

      END IF;
    END IF;
  END PROCESS temp_process56;

  product17 <= product17_pipe;

  temp_process57 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_15_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_15_pipe <= delay_pipeline(15);
      END IF;
    END IF;
  END PROCESS temp_process57;
  temp_process58 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product16 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product16 <= product16_pipe;
      END IF;
    END IF;
  END PROCESS temp_process58;
  mulpwr2_temp_8 <= ('0' & delay_pipeline_15_pipe) WHEN delay_pipeline_15_pipe = "10000000"
      ELSE -resize(delay_pipeline_15_pipe,9);

  product16_pipe <= resize(mulpwr2_temp_8(8 DOWNTO 0) & '0' & '0', 16);

  temp_process59 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_14_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_14_pipe <= delay_pipeline(14);
      END IF;
    END IF;
  END PROCESS temp_process59;
  temp_process60 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product15 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product15 <= product15_pipe;
      END IF;
    END IF;
  END PROCESS temp_process60;
  mulpwr2_temp_9 <= ('0' & delay_pipeline_14_pipe) WHEN delay_pipeline_14_pipe = "10000000"
      ELSE -resize(delay_pipeline_14_pipe,9);

  product15_pipe <= resize(mulpwr2_temp_9, 16);

  temp_process61 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_13_under_pipe <= (OTHERS => '0');
      coeff14_pipe <= (OTHERS => '0');
      product14_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_13_under_pipe <= delay_pipeline(13);
        coeff14_pipe <= coeff14;

        product14_pipe <= delay_pipeline_13_under_pipe * coeff14_pipe;

      END IF;
    END IF;
  END PROCESS temp_process61;

  product14 <= product14_pipe;

  temp_process62 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_12_under_pipe <= (OTHERS => '0');
      coeff13_pipe <= (OTHERS => '0');
      product13_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_12_under_pipe <= delay_pipeline(12);
        coeff13_pipe <= coeff13;

        product13_pipe <= delay_pipeline_12_under_pipe * coeff13_pipe;

      END IF;
    END IF;
  END PROCESS temp_process62;

  product13 <= product13_pipe;

  temp_process63 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_11_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_11_pipe <= delay_pipeline(11);
      END IF;
    END IF;
  END PROCESS temp_process63;
  temp_process64 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product12 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product12 <= product12_pipe;
      END IF;
    END IF;
  END PROCESS temp_process64;
  mulpwr2_temp_10 <= ('0' & delay_pipeline_11_pipe) WHEN delay_pipeline_11_pipe = "10000000"
      ELSE -resize(delay_pipeline_11_pipe,9);

  product12_pipe <= resize(mulpwr2_temp_10, 16);

  temp_process65 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_10_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_10_pipe <= delay_pipeline(10);
      END IF;
    END IF;
  END PROCESS temp_process65;
  temp_process66 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product11 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product11 <= product11_pipe;
      END IF;
    END IF;
  END PROCESS temp_process66;
  mulpwr2_temp_11 <= ('0' & delay_pipeline_10_pipe) WHEN delay_pipeline_10_pipe = "10000000"
      ELSE -resize(delay_pipeline_10_pipe,9);

  product11_pipe <= resize(mulpwr2_temp_11(8 DOWNTO 0) & '0', 16);

  temp_process67 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_9_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_9_pipe <= delay_pipeline(9);
      END IF;
    END IF;
  END PROCESS temp_process67;
  temp_process68 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product10 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product10 <= product10_pipe;
      END IF;
    END IF;
  END PROCESS temp_process68;
  mulpwr2_temp_12 <= ('0' & delay_pipeline_9_pipe) WHEN delay_pipeline_9_pipe = "10000000"
      ELSE -resize(delay_pipeline_9_pipe,9);

  product10_pipe <= resize(mulpwr2_temp_12, 16);

  temp_process69 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_8_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_8_pipe <= delay_pipeline(8);
      END IF;
    END IF;
  END PROCESS temp_process69;
  temp_process70 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product9 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product9 <= product9_pipe;
      END IF;
    END IF;
  END PROCESS temp_process70;
  product9_pipe <= resize(delay_pipeline_8_pipe, 16);

  temp_process71 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_7_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_7_pipe <= delay_pipeline(7);
      END IF;
    END IF;
  END PROCESS temp_process71;
  temp_process72 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product8 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product8 <= product8_pipe;
      END IF;
    END IF;
  END PROCESS temp_process72;
  product8_pipe <= resize(delay_pipeline_7_pipe(7 DOWNTO 0) & '0', 16);

  temp_process73 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_5_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_5_pipe <= delay_pipeline(5);
      END IF;
    END IF;
  END PROCESS temp_process73;
  temp_process74 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product6 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product6 <= product6_pipe;
      END IF;
    END IF;
  END PROCESS temp_process74;
  mulpwr2_temp_13 <= ('0' & delay_pipeline_5_pipe) WHEN delay_pipeline_5_pipe = "10000000"
      ELSE -resize(delay_pipeline_5_pipe,9);

  product6_pipe <= resize(mulpwr2_temp_13(8 DOWNTO 0) & '0', 16);

  temp_process75 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_4_under_pipe <= (OTHERS => '0');
      coeff5_pipe <= (OTHERS => '0');
      product5_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_4_under_pipe <= delay_pipeline(4);
        coeff5_pipe <= coeff5;

        product5_pipe <= delay_pipeline_4_under_pipe * coeff5_pipe;

      END IF;
    END IF;
  END PROCESS temp_process75;

  product5 <= product5_pipe;

  temp_process76 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_3_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_3_pipe <= delay_pipeline(3);
      END IF;
    END IF;
  END PROCESS temp_process76;
  temp_process77 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product4 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product4 <= product4_pipe;
      END IF;
    END IF;
  END PROCESS temp_process77;
  mulpwr2_temp_14 <= ('0' & delay_pipeline_3_pipe) WHEN delay_pipeline_3_pipe = "10000000"
      ELSE -resize(delay_pipeline_3_pipe,9);

  product4_pipe <= resize(mulpwr2_temp_14(8 DOWNTO 0) & '0', 16);

  temp_process78 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_2_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_2_pipe <= delay_pipeline(2);
      END IF;
    END IF;
  END PROCESS temp_process78;
  temp_process79 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      product3 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        product3 <= product3_pipe;
      END IF;
    END IF;
  END PROCESS temp_process79;
  mulpwr2_temp_15 <= ('0' & delay_pipeline_2_pipe) WHEN delay_pipeline_2_pipe = "10000000"
      ELSE -resize(delay_pipeline_2_pipe,9);

  product3_pipe <= resize(mulpwr2_temp_15, 16);

  add_temp <= resize(product59, 17) + resize(product58, 17);
  sum1_1 <= resize(add_temp, 22);

  add_temp_1 <= resize(product57, 17) + resize(product56, 17);
  sum1_2 <= resize(add_temp_1, 22);

  add_temp_2 <= resize(product54, 17) + resize(product53, 17);
  sum1_3 <= resize(add_temp_2, 22);

  add_temp_3 <= resize(product52, 17) + resize(product51, 17);
  sum1_4 <= resize(add_temp_3, 22);

  add_temp_4 <= resize(product50, 17) + resize(product49, 17);
  sum1_5 <= resize(add_temp_4, 22);

  add_temp_5 <= resize(product48, 17) + resize(product47, 17);
  sum1_6 <= resize(add_temp_5, 22);

  add_temp_6 <= resize(product46, 17) + resize(product45, 17);
  sum1_7 <= resize(add_temp_6, 22);

  add_temp_7 <= resize(product44, 17) + resize(product43, 17);
  sum1_8 <= resize(add_temp_7, 22);

  add_temp_8 <= resize(product42, 17) + resize(product41, 17);
  sum1_9 <= resize(add_temp_8, 22);

  add_temp_9 <= resize(product40, 17) + resize(product39, 17);
  sum1_10 <= resize(add_temp_9, 22);

  add_temp_10 <= resize(product38, 17) + resize(product37, 17);
  sum1_11 <= resize(add_temp_10, 22);

  add_temp_11 <= resize(product36, 17) + resize(product35, 17);
  sum1_12 <= resize(add_temp_11, 22);

  add_temp_12 <= resize(product34, 17) + resize(product33, 17);
  sum1_13 <= resize(add_temp_12, 22);

  add_temp_13 <= resize(product32, 17) + resize(product31, 17);
  sum1_14 <= resize(add_temp_13, 22);

  add_temp_14 <= resize(product30, 17) + resize(product29, 17);
  sum1_15 <= resize(add_temp_14, 22);

  add_temp_15 <= resize(product28, 17) + resize(product27, 17);
  sum1_16 <= resize(add_temp_15, 22);

  add_temp_16 <= resize(product26, 17) + resize(product25, 17);
  sum1_17 <= resize(add_temp_16, 22);

  add_temp_17 <= resize(product24, 17) + resize(product23, 17);
  sum1_18 <= resize(add_temp_17, 22);

  add_temp_18 <= resize(product22, 17) + resize(product21, 17);
  sum1_19 <= resize(add_temp_18, 22);

  add_temp_19 <= resize(product20, 17) + resize(product19, 17);
  sum1_20 <= resize(add_temp_19, 22);

  add_temp_20 <= resize(product18, 17) + resize(product17, 17);
  sum1_21 <= resize(add_temp_20, 22);

  add_temp_21 <= resize(product16, 17) + resize(product15, 17);
  sum1_22 <= resize(add_temp_21, 22);

  add_temp_22 <= resize(product14, 17) + resize(product13, 17);
  sum1_23 <= resize(add_temp_22, 22);

  add_temp_23 <= resize(product12, 17) + resize(product11, 17);
  sum1_24 <= resize(add_temp_23, 22);

  add_temp_24 <= resize(product10, 17) + resize(product9, 17);
  sum1_25 <= resize(add_temp_24, 22);

  add_temp_25 <= resize(product8, 17) + resize(product6, 17);
  sum1_26 <= resize(add_temp_25, 22);

  add_temp_26 <= resize(product5, 17) + resize(product4, 17);
  sum1_27 <= resize(add_temp_26, 22);

  temp_process80 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sumpipe1_1 <= (OTHERS => '0');
      sumpipe1_2 <= (OTHERS => '0');
      sumpipe1_3 <= (OTHERS => '0');
      sumpipe1_4 <= (OTHERS => '0');
      sumpipe1_5 <= (OTHERS => '0');
      sumpipe1_6 <= (OTHERS => '0');
      sumpipe1_7 <= (OTHERS => '0');
      sumpipe1_8 <= (OTHERS => '0');
      sumpipe1_9 <= (OTHERS => '0');
      sumpipe1_10 <= (OTHERS => '0');
      sumpipe1_11 <= (OTHERS => '0');
      sumpipe1_12 <= (OTHERS => '0');
      sumpipe1_13 <= (OTHERS => '0');
      sumpipe1_14 <= (OTHERS => '0');
      sumpipe1_15 <= (OTHERS => '0');
      sumpipe1_16 <= (OTHERS => '0');
      sumpipe1_17 <= (OTHERS => '0');
      sumpipe1_18 <= (OTHERS => '0');
      sumpipe1_19 <= (OTHERS => '0');
      sumpipe1_20 <= (OTHERS => '0');
      sumpipe1_21 <= (OTHERS => '0');
      sumpipe1_22 <= (OTHERS => '0');
      sumpipe1_23 <= (OTHERS => '0');
      sumpipe1_24 <= (OTHERS => '0');
      sumpipe1_25 <= (OTHERS => '0');
      sumpipe1_26 <= (OTHERS => '0');
      sumpipe1_27 <= (OTHERS => '0');
      sumpipe1_28 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        sumpipe1_1 <= sum1_1;
        sumpipe1_2 <= sum1_2;
        sumpipe1_3 <= sum1_3;
        sumpipe1_4 <= sum1_4;
        sumpipe1_5 <= sum1_5;
        sumpipe1_6 <= sum1_6;
        sumpipe1_7 <= sum1_7;
        sumpipe1_8 <= sum1_8;
        sumpipe1_9 <= sum1_9;
        sumpipe1_10 <= sum1_10;
        sumpipe1_11 <= sum1_11;
        sumpipe1_12 <= sum1_12;
        sumpipe1_13 <= sum1_13;
        sumpipe1_14 <= sum1_14;
        sumpipe1_15 <= sum1_15;
        sumpipe1_16 <= sum1_16;
        sumpipe1_17 <= sum1_17;
        sumpipe1_18 <= sum1_18;
        sumpipe1_19 <= sum1_19;
        sumpipe1_20 <= sum1_20;
        sumpipe1_21 <= sum1_21;
        sumpipe1_22 <= sum1_22;
        sumpipe1_23 <= sum1_23;
        sumpipe1_24 <= sum1_24;
        sumpipe1_25 <= sum1_25;
        sumpipe1_26 <= sum1_26;
        sumpipe1_27 <= sum1_27;
        sumpipe1_28 <= product3;
      END IF;
    END IF; 
  END PROCESS temp_process80;

  add_temp_27 <= resize(sumpipe1_1, 23) + resize(sumpipe1_2, 23);
  sum2_1 <= add_temp_27(21 DOWNTO 0);

  add_temp_28 <= resize(sumpipe1_3, 23) + resize(sumpipe1_4, 23);
  sum2_2 <= add_temp_28(21 DOWNTO 0);

  add_temp_29 <= resize(sumpipe1_5, 23) + resize(sumpipe1_6, 23);
  sum2_3 <= add_temp_29(21 DOWNTO 0);

  add_temp_30 <= resize(sumpipe1_7, 23) + resize(sumpipe1_8, 23);
  sum2_4 <= add_temp_30(21 DOWNTO 0);

  add_temp_31 <= resize(sumpipe1_9, 23) + resize(sumpipe1_10, 23);
  sum2_5 <= add_temp_31(21 DOWNTO 0);

  add_temp_32 <= resize(sumpipe1_11, 23) + resize(sumpipe1_12, 23);
  sum2_6 <= add_temp_32(21 DOWNTO 0);

  add_temp_33 <= resize(sumpipe1_13, 23) + resize(sumpipe1_14, 23);
  sum2_7 <= add_temp_33(21 DOWNTO 0);

  add_temp_34 <= resize(sumpipe1_15, 23) + resize(sumpipe1_16, 23);
  sum2_8 <= add_temp_34(21 DOWNTO 0);

  add_temp_35 <= resize(sumpipe1_17, 23) + resize(sumpipe1_18, 23);
  sum2_9 <= add_temp_35(21 DOWNTO 0);

  add_temp_36 <= resize(sumpipe1_19, 23) + resize(sumpipe1_20, 23);
  sum2_10 <= add_temp_36(21 DOWNTO 0);

  add_temp_37 <= resize(sumpipe1_21, 23) + resize(sumpipe1_22, 23);
  sum2_11 <= add_temp_37(21 DOWNTO 0);

  add_temp_38 <= resize(sumpipe1_23, 23) + resize(sumpipe1_24, 23);
  sum2_12 <= add_temp_38(21 DOWNTO 0);

  add_temp_39 <= resize(sumpipe1_25, 23) + resize(sumpipe1_26, 23);
  sum2_13 <= add_temp_39(21 DOWNTO 0);

  add_temp_40 <= resize(sumpipe1_27, 23) + resize(sumpipe1_28, 23);
  sum2_14 <= add_temp_40(21 DOWNTO 0);

  temp_process81 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sumpipe2_1 <= (OTHERS => '0');
      sumpipe2_2 <= (OTHERS => '0');
      sumpipe2_3 <= (OTHERS => '0');
      sumpipe2_4 <= (OTHERS => '0');
      sumpipe2_5 <= (OTHERS => '0');
      sumpipe2_6 <= (OTHERS => '0');
      sumpipe2_7 <= (OTHERS => '0');
      sumpipe2_8 <= (OTHERS => '0');
      sumpipe2_9 <= (OTHERS => '0');
      sumpipe2_10 <= (OTHERS => '0');
      sumpipe2_11 <= (OTHERS => '0');
      sumpipe2_12 <= (OTHERS => '0');
      sumpipe2_13 <= (OTHERS => '0');
      sumpipe2_14 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        sumpipe2_1 <= sum2_1;
        sumpipe2_2 <= sum2_2;
        sumpipe2_3 <= sum2_3;
        sumpipe2_4 <= sum2_4;
        sumpipe2_5 <= sum2_5;
        sumpipe2_6 <= sum2_6;
        sumpipe2_7 <= sum2_7;
        sumpipe2_8 <= sum2_8;
        sumpipe2_9 <= sum2_9;
        sumpipe2_10 <= sum2_10;
        sumpipe2_11 <= sum2_11;
        sumpipe2_12 <= sum2_12;
        sumpipe2_13 <= sum2_13;
        sumpipe2_14 <= sum2_14;
      END IF;
    END IF; 
  END PROCESS temp_process81;

  add_temp_41 <= resize(sumpipe2_1, 23) + resize(sumpipe2_2, 23);
  sum3_1 <= add_temp_41(21 DOWNTO 0);

  add_temp_42 <= resize(sumpipe2_3, 23) + resize(sumpipe2_4, 23);
  sum3_2 <= add_temp_42(21 DOWNTO 0);

  add_temp_43 <= resize(sumpipe2_5, 23) + resize(sumpipe2_6, 23);
  sum3_3 <= add_temp_43(21 DOWNTO 0);

  add_temp_44 <= resize(sumpipe2_7, 23) + resize(sumpipe2_8, 23);
  sum3_4 <= add_temp_44(21 DOWNTO 0);

  add_temp_45 <= resize(sumpipe2_9, 23) + resize(sumpipe2_10, 23);
  sum3_5 <= add_temp_45(21 DOWNTO 0);

  add_temp_46 <= resize(sumpipe2_11, 23) + resize(sumpipe2_12, 23);
  sum3_6 <= add_temp_46(21 DOWNTO 0);

  add_temp_47 <= resize(sumpipe2_13, 23) + resize(sumpipe2_14, 23);
  sum3_7 <= add_temp_47(21 DOWNTO 0);

  temp_process82 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sumpipe3_1 <= (OTHERS => '0');
      sumpipe3_2 <= (OTHERS => '0');
      sumpipe3_3 <= (OTHERS => '0');
      sumpipe3_4 <= (OTHERS => '0');
      sumpipe3_5 <= (OTHERS => '0');
      sumpipe3_6 <= (OTHERS => '0');
      sumpipe3_7 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        sumpipe3_1 <= sum3_1;
        sumpipe3_2 <= sum3_2;
        sumpipe3_3 <= sum3_3;
        sumpipe3_4 <= sum3_4;
        sumpipe3_5 <= sum3_5;
        sumpipe3_6 <= sum3_6;
        sumpipe3_7 <= sum3_7;
      END IF;
    END IF; 
  END PROCESS temp_process82;

  add_temp_48 <= resize(sumpipe3_1, 23) + resize(sumpipe3_2, 23);
  sum4_1 <= add_temp_48(21 DOWNTO 0);

  add_temp_49 <= resize(sumpipe3_3, 23) + resize(sumpipe3_4, 23);
  sum4_2 <= add_temp_49(21 DOWNTO 0);

  add_temp_50 <= resize(sumpipe3_5, 23) + resize(sumpipe3_6, 23);
  sum4_3 <= add_temp_50(21 DOWNTO 0);

  temp_process83 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sumpipe4_1 <= (OTHERS => '0');
      sumpipe4_2 <= (OTHERS => '0');
      sumpipe4_3 <= (OTHERS => '0');
      sumpipe4_4 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        sumpipe4_1 <= sum4_1;
        sumpipe4_2 <= sum4_2;
        sumpipe4_3 <= sum4_3;
        sumpipe4_4 <= sumpipe3_7;
      END IF;
    END IF; 
  END PROCESS temp_process83;

  add_temp_51 <= resize(sumpipe4_1, 23) + resize(sumpipe4_2, 23);
  sum5_1 <= add_temp_51(21 DOWNTO 0);

  add_temp_52 <= resize(sumpipe4_3, 23) + resize(sumpipe4_4, 23);
  sum5_2 <= add_temp_52(21 DOWNTO 0);

  temp_process84 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sumpipe5_1 <= (OTHERS => '0');
      sumpipe5_2 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        sumpipe5_1 <= sum5_1;
        sumpipe5_2 <= sum5_2;
      END IF;
    END IF; 
  END PROCESS temp_process84;

  add_temp_53 <= resize(sumpipe5_1, 23) + resize(sumpipe5_2, 23);
  sum6_1 <= add_temp_53(21 DOWNTO 0);

  temp_process85 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sumpipe6_1 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        sumpipe6_1 <= sum6_1;
      END IF;
    END IF; 
  END PROCESS temp_process85;

  sum_final <= sumpipe6_1;

  output_typeconvert <= sum_final;

  Output_Register_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      output_register <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        output_register <= output_typeconvert;
      END IF;
    END IF; 
  END PROCESS Output_Register_process;

  -- Assignment Statements
  filter_out <= std_logic_vector(output_register);
END rtl;
